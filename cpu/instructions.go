// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2019-06-12 22:09:24.981737947 -0300 -03 m=+0.014247026
package cpu

// region Load/Store Instructions

// gbLDrrAB Sets Register B to the value in A
func gbLDrrAB(cpu *Core) {
	cpu.Registers.A = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAC Sets Register C to the value in A
func gbLDrrAC(cpu *Core) {
	cpu.Registers.A = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAD Sets Register D to the value in A
func gbLDrrAD(cpu *Core) {
	cpu.Registers.A = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAE Sets Register E to the value in A
func gbLDrrAE(cpu *Core) {
	cpu.Registers.A = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAH Sets Register H to the value in A
func gbLDrrAH(cpu *Core) {
	cpu.Registers.A = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAL Sets Register L to the value in A
func gbLDrrAL(cpu *Core) {
	cpu.Registers.A = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrAF Sets Register F to the value in A
func gbLDrrAF(cpu *Core) {
	cpu.Registers.A = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBA Sets Register A to the value in B
func gbLDrrBA(cpu *Core) {
	cpu.Registers.B = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBC Sets Register C to the value in B
func gbLDrrBC(cpu *Core) {
	cpu.Registers.B = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBD Sets Register D to the value in B
func gbLDrrBD(cpu *Core) {
	cpu.Registers.B = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBE Sets Register E to the value in B
func gbLDrrBE(cpu *Core) {
	cpu.Registers.B = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBH Sets Register H to the value in B
func gbLDrrBH(cpu *Core) {
	cpu.Registers.B = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBL Sets Register L to the value in B
func gbLDrrBL(cpu *Core) {
	cpu.Registers.B = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrBF Sets Register F to the value in B
func gbLDrrBF(cpu *Core) {
	cpu.Registers.B = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCA Sets Register A to the value in C
func gbLDrrCA(cpu *Core) {
	cpu.Registers.C = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCB Sets Register B to the value in C
func gbLDrrCB(cpu *Core) {
	cpu.Registers.C = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCD Sets Register D to the value in C
func gbLDrrCD(cpu *Core) {
	cpu.Registers.C = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCE Sets Register E to the value in C
func gbLDrrCE(cpu *Core) {
	cpu.Registers.C = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCH Sets Register H to the value in C
func gbLDrrCH(cpu *Core) {
	cpu.Registers.C = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCL Sets Register L to the value in C
func gbLDrrCL(cpu *Core) {
	cpu.Registers.C = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrCF Sets Register F to the value in C
func gbLDrrCF(cpu *Core) {
	cpu.Registers.C = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDA Sets Register A to the value in D
func gbLDrrDA(cpu *Core) {
	cpu.Registers.D = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDB Sets Register B to the value in D
func gbLDrrDB(cpu *Core) {
	cpu.Registers.D = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDC Sets Register C to the value in D
func gbLDrrDC(cpu *Core) {
	cpu.Registers.D = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDE Sets Register E to the value in D
func gbLDrrDE(cpu *Core) {
	cpu.Registers.D = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDH Sets Register H to the value in D
func gbLDrrDH(cpu *Core) {
	cpu.Registers.D = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDL Sets Register L to the value in D
func gbLDrrDL(cpu *Core) {
	cpu.Registers.D = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrDF Sets Register F to the value in D
func gbLDrrDF(cpu *Core) {
	cpu.Registers.D = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEA Sets Register A to the value in E
func gbLDrrEA(cpu *Core) {
	cpu.Registers.E = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEB Sets Register B to the value in E
func gbLDrrEB(cpu *Core) {
	cpu.Registers.E = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEC Sets Register C to the value in E
func gbLDrrEC(cpu *Core) {
	cpu.Registers.E = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrED Sets Register D to the value in E
func gbLDrrED(cpu *Core) {
	cpu.Registers.E = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEH Sets Register H to the value in E
func gbLDrrEH(cpu *Core) {
	cpu.Registers.E = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEL Sets Register L to the value in E
func gbLDrrEL(cpu *Core) {
	cpu.Registers.E = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrEF Sets Register F to the value in E
func gbLDrrEF(cpu *Core) {
	cpu.Registers.E = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHA Sets Register A to the value in H
func gbLDrrHA(cpu *Core) {
	cpu.Registers.H = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHB Sets Register B to the value in H
func gbLDrrHB(cpu *Core) {
	cpu.Registers.H = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHC Sets Register C to the value in H
func gbLDrrHC(cpu *Core) {
	cpu.Registers.H = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHD Sets Register D to the value in H
func gbLDrrHD(cpu *Core) {
	cpu.Registers.H = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHE Sets Register E to the value in H
func gbLDrrHE(cpu *Core) {
	cpu.Registers.H = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHL Sets Register L to the value in H
func gbLDrrHL(cpu *Core) {
	cpu.Registers.H = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrHF Sets Register F to the value in H
func gbLDrrHF(cpu *Core) {
	cpu.Registers.H = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLA Sets Register A to the value in L
func gbLDrrLA(cpu *Core) {
	cpu.Registers.L = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLB Sets Register B to the value in L
func gbLDrrLB(cpu *Core) {
	cpu.Registers.L = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLC Sets Register C to the value in L
func gbLDrrLC(cpu *Core) {
	cpu.Registers.L = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLD Sets Register D to the value in L
func gbLDrrLD(cpu *Core) {
	cpu.Registers.L = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLE Sets Register E to the value in L
func gbLDrrLE(cpu *Core) {
	cpu.Registers.L = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLH Sets Register H to the value in L
func gbLDrrLH(cpu *Core) {
	cpu.Registers.L = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrLF Sets Register F to the value in L
func gbLDrrLF(cpu *Core) {
	cpu.Registers.L = cpu.Registers.F
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFA Sets Register A to the value in F
func gbLDrrFA(cpu *Core) {
	cpu.Registers.F = cpu.Registers.A
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFB Sets Register B to the value in F
func gbLDrrFB(cpu *Core) {
	cpu.Registers.F = cpu.Registers.B
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFC Sets Register C to the value in F
func gbLDrrFC(cpu *Core) {
	cpu.Registers.F = cpu.Registers.C
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFD Sets Register D to the value in F
func gbLDrrFD(cpu *Core) {
	cpu.Registers.F = cpu.Registers.D
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFE Sets Register E to the value in F
func gbLDrrFE(cpu *Core) {
	cpu.Registers.F = cpu.Registers.E
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFH Sets Register H to the value in F
func gbLDrrFH(cpu *Core) {
	cpu.Registers.F = cpu.Registers.H
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrrFL Sets Register L to the value in F
func gbLDrrFL(cpu *Core) {
	cpu.Registers.F = cpu.Registers.L
	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbLDrHLmA Loads to Register A the value in memory pointed by HL
func gbLDrHLmA(cpu *Core) {
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmB Loads to Register B the value in memory pointed by HL
func gbLDrHLmB(cpu *Core) {
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmC Loads to Register C the value in memory pointed by HL
func gbLDrHLmC(cpu *Core) {
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmD Loads to Register D the value in memory pointed by HL
func gbLDrHLmD(cpu *Core) {
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmE Loads to Register E the value in memory pointed by HL
func gbLDrHLmE(cpu *Core) {
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmH Loads to Register H the value in memory pointed by HL
func gbLDrHLmH(cpu *Core) {
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmL Loads to Register L the value in memory pointed by HL
func gbLDrHLmL(cpu *Core) {
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrHLmF Loads to Register F the value in memory pointed by HL
func gbLDrHLmF(cpu *Core) {
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.HL())
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrA Writes register A to memory pointed by HL
func gbLDHLmrA(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrB Writes register B to memory pointed by HL
func gbLDHLmrB(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrC Writes register C to memory pointed by HL
func gbLDHLmrC(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrD Writes register D to memory pointed by HL
func gbLDHLmrD(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrE Writes register E to memory pointed by HL
func gbLDHLmrE(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrH Writes register H to memory pointed by HL
func gbLDHLmrH(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrL Writes register L to memory pointed by HL
func gbLDHLmrL(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmrF Writes register F to memory pointed by HL
func gbLDHLmrF(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnA Loads a byte from Program Memory into A. Increments PC
func gbLDrnA(cpu *Core) {
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnB Loads a byte from Program Memory into B. Increments PC
func gbLDrnB(cpu *Core) {
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnC Loads a byte from Program Memory into C. Increments PC
func gbLDrnC(cpu *Core) {
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnD Loads a byte from Program Memory into D. Increments PC
func gbLDrnD(cpu *Core) {
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnE Loads a byte from Program Memory into E. Increments PC
func gbLDrnE(cpu *Core) {
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnH Loads a byte from Program Memory into H. Increments PC
func gbLDrnH(cpu *Core) {
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnL Loads a byte from Program Memory into L. Increments PC
func gbLDrnL(cpu *Core) {
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDrnF Loads a byte from Program Memory into F. Increments PC
func gbLDrnF(cpu *Core) {
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// LDHLmn Writes byte from Program Memory into Memory (H/L). Increments Program Counter
func gbLDHLmn(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Memory.ReadByte(cpu.Registers.PC))
	cpu.Registers.PC++
	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// LDSPnn Reads word from Program Counter and stores in SP
func gbLDSPnn(cpu *Core) {
	cpu.Registers.SP = cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// LDmmSP
func gbLDmmSP(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Memory.WriteWord(addr, cpu.Registers.SP)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 5
	cpu.Registers.LastClockT = 20
}

// LDAIOC
func gbLDAIOC(cpu *Core) {
	cpu.Registers.A = cpu.Memory.ReadByte(0xFF00 + uint16(cpu.Registers.C))
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// LDIOCA
func gbLDIOCA(cpu *Core) {
	cpu.Memory.WriteByte(0xFF00+uint16(cpu.Registers.C), cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// LDHLSPn
func gbLDHLSPn(cpu *Core) {
	v := int(int8(cpu.Memory.ReadByte(cpu.Registers.PC)))
	cpu.Registers.PC++

	/*
	   if (v > 127) {
	       v = -((~v + 1) & 0xFF);
	   }
	*/

	// TODO: WARNING, this probably is broken

	cpu.Registers.SetZero(false)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(int(cpu.Registers.SP&0xF)+v > 0xF)
	cpu.Registers.SetCarry(int(cpu.Registers.SP&0xFF)+v > 0xFF)

	v += int(cpu.Registers.SP)

	cpu.Registers.H = uint8(uint(v) >> 8)
	cpu.Registers.L = uint8(uint(v) & 0xFF)

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// LDHLSPr
func gbLDHLSPr(cpu *Core) {
	cpu.Registers.SP = cpu.Registers.HL()
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmA Writes value of register A to memory Pointed by A << 8 + B
func gbLDABmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmA Writes value of register A to memory Pointed by A << 8 + C
func gbLDACmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmA Writes value of register A to memory Pointed by A << 8 + D
func gbLDADmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmA Writes value of register A to memory Pointed by A << 8 + E
func gbLDAEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmA Writes value of register A to memory Pointed by A << 8 + H
func gbLDAHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmA Writes value of register A to memory Pointed by A << 8 + L
func gbLDALmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmA Writes value of register A to memory Pointed by A << 8 + F
func gbLDAFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmA Writes value of register A to memory Pointed by B << 8 + A
func gbLDBAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmA Writes value of register A to memory Pointed by B << 8 + C
func gbLDBCmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmA Writes value of register A to memory Pointed by B << 8 + D
func gbLDBDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmA Writes value of register A to memory Pointed by B << 8 + E
func gbLDBEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmA Writes value of register A to memory Pointed by B << 8 + H
func gbLDBHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmA Writes value of register A to memory Pointed by B << 8 + L
func gbLDBLmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmA Writes value of register A to memory Pointed by B << 8 + F
func gbLDBFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmA Writes value of register A to memory Pointed by C << 8 + A
func gbLDCAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmA Writes value of register A to memory Pointed by C << 8 + B
func gbLDCBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmA Writes value of register A to memory Pointed by C << 8 + D
func gbLDCDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmA Writes value of register A to memory Pointed by C << 8 + E
func gbLDCEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmA Writes value of register A to memory Pointed by C << 8 + H
func gbLDCHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmA Writes value of register A to memory Pointed by C << 8 + L
func gbLDCLmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmA Writes value of register A to memory Pointed by C << 8 + F
func gbLDCFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmA Writes value of register A to memory Pointed by D << 8 + A
func gbLDDAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmA Writes value of register A to memory Pointed by D << 8 + B
func gbLDDBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmA Writes value of register A to memory Pointed by D << 8 + C
func gbLDDCmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmA Writes value of register A to memory Pointed by D << 8 + E
func gbLDDEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmA Writes value of register A to memory Pointed by D << 8 + H
func gbLDDHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmA Writes value of register A to memory Pointed by D << 8 + L
func gbLDDLmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmA Writes value of register A to memory Pointed by D << 8 + F
func gbLDDFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmA Writes value of register A to memory Pointed by E << 8 + A
func gbLDEAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmA Writes value of register A to memory Pointed by E << 8 + B
func gbLDEBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmA Writes value of register A to memory Pointed by E << 8 + C
func gbLDECmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmA Writes value of register A to memory Pointed by E << 8 + D
func gbLDEDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmA Writes value of register A to memory Pointed by E << 8 + H
func gbLDEHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmA Writes value of register A to memory Pointed by E << 8 + L
func gbLDELmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmA Writes value of register A to memory Pointed by E << 8 + F
func gbLDEFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmA Writes value of register A to memory Pointed by H << 8 + A
func gbLDHAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmA Writes value of register A to memory Pointed by H << 8 + B
func gbLDHBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmA Writes value of register A to memory Pointed by H << 8 + C
func gbLDHCmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmA Writes value of register A to memory Pointed by H << 8 + D
func gbLDHDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmA Writes value of register A to memory Pointed by H << 8 + E
func gbLDHEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmA Writes value of register A to memory Pointed by H << 8 + L
func gbLDHLmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmA Writes value of register A to memory Pointed by H << 8 + F
func gbLDHFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmA Writes value of register A to memory Pointed by L << 8 + A
func gbLDLAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmA Writes value of register A to memory Pointed by L << 8 + B
func gbLDLBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmA Writes value of register A to memory Pointed by L << 8 + C
func gbLDLCmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmA Writes value of register A to memory Pointed by L << 8 + D
func gbLDLDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmA Writes value of register A to memory Pointed by L << 8 + E
func gbLDLEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmA Writes value of register A to memory Pointed by L << 8 + H
func gbLDLHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmA Writes value of register A to memory Pointed by L << 8 + F
func gbLDLFmA(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmA Writes value of register A to memory Pointed by F << 8 + A
func gbLDFAmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmA Writes value of register A to memory Pointed by F << 8 + B
func gbLDFBmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmA Writes value of register A to memory Pointed by F << 8 + C
func gbLDFCmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmA Writes value of register A to memory Pointed by F << 8 + D
func gbLDFDmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmA Writes value of register A to memory Pointed by F << 8 + E
func gbLDFEmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmA Writes value of register A to memory Pointed by F << 8 + H
func gbLDFHmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmA Writes value of register A to memory Pointed by F << 8 + L
func gbLDFLmA(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.A)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmB Writes value of register B to memory Pointed by A << 8 + B
func gbLDABmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmB Writes value of register B to memory Pointed by A << 8 + C
func gbLDACmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmB Writes value of register B to memory Pointed by A << 8 + D
func gbLDADmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmB Writes value of register B to memory Pointed by A << 8 + E
func gbLDAEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmB Writes value of register B to memory Pointed by A << 8 + H
func gbLDAHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmB Writes value of register B to memory Pointed by A << 8 + L
func gbLDALmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmB Writes value of register B to memory Pointed by A << 8 + F
func gbLDAFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmB Writes value of register B to memory Pointed by B << 8 + A
func gbLDBAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmB Writes value of register B to memory Pointed by B << 8 + C
func gbLDBCmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmB Writes value of register B to memory Pointed by B << 8 + D
func gbLDBDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmB Writes value of register B to memory Pointed by B << 8 + E
func gbLDBEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmB Writes value of register B to memory Pointed by B << 8 + H
func gbLDBHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmB Writes value of register B to memory Pointed by B << 8 + L
func gbLDBLmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmB Writes value of register B to memory Pointed by B << 8 + F
func gbLDBFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmB Writes value of register B to memory Pointed by C << 8 + A
func gbLDCAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmB Writes value of register B to memory Pointed by C << 8 + B
func gbLDCBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmB Writes value of register B to memory Pointed by C << 8 + D
func gbLDCDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmB Writes value of register B to memory Pointed by C << 8 + E
func gbLDCEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmB Writes value of register B to memory Pointed by C << 8 + H
func gbLDCHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmB Writes value of register B to memory Pointed by C << 8 + L
func gbLDCLmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmB Writes value of register B to memory Pointed by C << 8 + F
func gbLDCFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmB Writes value of register B to memory Pointed by D << 8 + A
func gbLDDAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmB Writes value of register B to memory Pointed by D << 8 + B
func gbLDDBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmB Writes value of register B to memory Pointed by D << 8 + C
func gbLDDCmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmB Writes value of register B to memory Pointed by D << 8 + E
func gbLDDEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmB Writes value of register B to memory Pointed by D << 8 + H
func gbLDDHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmB Writes value of register B to memory Pointed by D << 8 + L
func gbLDDLmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmB Writes value of register B to memory Pointed by D << 8 + F
func gbLDDFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmB Writes value of register B to memory Pointed by E << 8 + A
func gbLDEAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmB Writes value of register B to memory Pointed by E << 8 + B
func gbLDEBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmB Writes value of register B to memory Pointed by E << 8 + C
func gbLDECmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmB Writes value of register B to memory Pointed by E << 8 + D
func gbLDEDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmB Writes value of register B to memory Pointed by E << 8 + H
func gbLDEHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmB Writes value of register B to memory Pointed by E << 8 + L
func gbLDELmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmB Writes value of register B to memory Pointed by E << 8 + F
func gbLDEFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmB Writes value of register B to memory Pointed by H << 8 + A
func gbLDHAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmB Writes value of register B to memory Pointed by H << 8 + B
func gbLDHBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmB Writes value of register B to memory Pointed by H << 8 + C
func gbLDHCmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmB Writes value of register B to memory Pointed by H << 8 + D
func gbLDHDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmB Writes value of register B to memory Pointed by H << 8 + E
func gbLDHEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmB Writes value of register B to memory Pointed by H << 8 + L
func gbLDHLmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmB Writes value of register B to memory Pointed by H << 8 + F
func gbLDHFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmB Writes value of register B to memory Pointed by L << 8 + A
func gbLDLAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmB Writes value of register B to memory Pointed by L << 8 + B
func gbLDLBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmB Writes value of register B to memory Pointed by L << 8 + C
func gbLDLCmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmB Writes value of register B to memory Pointed by L << 8 + D
func gbLDLDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmB Writes value of register B to memory Pointed by L << 8 + E
func gbLDLEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmB Writes value of register B to memory Pointed by L << 8 + H
func gbLDLHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmB Writes value of register B to memory Pointed by L << 8 + F
func gbLDLFmB(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmB Writes value of register B to memory Pointed by F << 8 + A
func gbLDFAmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmB Writes value of register B to memory Pointed by F << 8 + B
func gbLDFBmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmB Writes value of register B to memory Pointed by F << 8 + C
func gbLDFCmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmB Writes value of register B to memory Pointed by F << 8 + D
func gbLDFDmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmB Writes value of register B to memory Pointed by F << 8 + E
func gbLDFEmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmB Writes value of register B to memory Pointed by F << 8 + H
func gbLDFHmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmB Writes value of register B to memory Pointed by F << 8 + L
func gbLDFLmB(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.B)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmC Writes value of register C to memory Pointed by A << 8 + B
func gbLDABmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmC Writes value of register C to memory Pointed by A << 8 + C
func gbLDACmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmC Writes value of register C to memory Pointed by A << 8 + D
func gbLDADmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmC Writes value of register C to memory Pointed by A << 8 + E
func gbLDAEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmC Writes value of register C to memory Pointed by A << 8 + H
func gbLDAHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmC Writes value of register C to memory Pointed by A << 8 + L
func gbLDALmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmC Writes value of register C to memory Pointed by A << 8 + F
func gbLDAFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmC Writes value of register C to memory Pointed by B << 8 + A
func gbLDBAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmC Writes value of register C to memory Pointed by B << 8 + C
func gbLDBCmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmC Writes value of register C to memory Pointed by B << 8 + D
func gbLDBDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmC Writes value of register C to memory Pointed by B << 8 + E
func gbLDBEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmC Writes value of register C to memory Pointed by B << 8 + H
func gbLDBHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmC Writes value of register C to memory Pointed by B << 8 + L
func gbLDBLmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmC Writes value of register C to memory Pointed by B << 8 + F
func gbLDBFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmC Writes value of register C to memory Pointed by C << 8 + A
func gbLDCAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmC Writes value of register C to memory Pointed by C << 8 + B
func gbLDCBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmC Writes value of register C to memory Pointed by C << 8 + D
func gbLDCDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmC Writes value of register C to memory Pointed by C << 8 + E
func gbLDCEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmC Writes value of register C to memory Pointed by C << 8 + H
func gbLDCHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmC Writes value of register C to memory Pointed by C << 8 + L
func gbLDCLmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmC Writes value of register C to memory Pointed by C << 8 + F
func gbLDCFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmC Writes value of register C to memory Pointed by D << 8 + A
func gbLDDAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmC Writes value of register C to memory Pointed by D << 8 + B
func gbLDDBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmC Writes value of register C to memory Pointed by D << 8 + C
func gbLDDCmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmC Writes value of register C to memory Pointed by D << 8 + E
func gbLDDEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmC Writes value of register C to memory Pointed by D << 8 + H
func gbLDDHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmC Writes value of register C to memory Pointed by D << 8 + L
func gbLDDLmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmC Writes value of register C to memory Pointed by D << 8 + F
func gbLDDFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmC Writes value of register C to memory Pointed by E << 8 + A
func gbLDEAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmC Writes value of register C to memory Pointed by E << 8 + B
func gbLDEBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmC Writes value of register C to memory Pointed by E << 8 + C
func gbLDECmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmC Writes value of register C to memory Pointed by E << 8 + D
func gbLDEDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmC Writes value of register C to memory Pointed by E << 8 + H
func gbLDEHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmC Writes value of register C to memory Pointed by E << 8 + L
func gbLDELmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmC Writes value of register C to memory Pointed by E << 8 + F
func gbLDEFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmC Writes value of register C to memory Pointed by H << 8 + A
func gbLDHAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmC Writes value of register C to memory Pointed by H << 8 + B
func gbLDHBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmC Writes value of register C to memory Pointed by H << 8 + C
func gbLDHCmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmC Writes value of register C to memory Pointed by H << 8 + D
func gbLDHDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmC Writes value of register C to memory Pointed by H << 8 + E
func gbLDHEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmC Writes value of register C to memory Pointed by H << 8 + L
func gbLDHLmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmC Writes value of register C to memory Pointed by H << 8 + F
func gbLDHFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmC Writes value of register C to memory Pointed by L << 8 + A
func gbLDLAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmC Writes value of register C to memory Pointed by L << 8 + B
func gbLDLBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmC Writes value of register C to memory Pointed by L << 8 + C
func gbLDLCmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmC Writes value of register C to memory Pointed by L << 8 + D
func gbLDLDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmC Writes value of register C to memory Pointed by L << 8 + E
func gbLDLEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmC Writes value of register C to memory Pointed by L << 8 + H
func gbLDLHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmC Writes value of register C to memory Pointed by L << 8 + F
func gbLDLFmC(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmC Writes value of register C to memory Pointed by F << 8 + A
func gbLDFAmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmC Writes value of register C to memory Pointed by F << 8 + B
func gbLDFBmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmC Writes value of register C to memory Pointed by F << 8 + C
func gbLDFCmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmC Writes value of register C to memory Pointed by F << 8 + D
func gbLDFDmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmC Writes value of register C to memory Pointed by F << 8 + E
func gbLDFEmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmC Writes value of register C to memory Pointed by F << 8 + H
func gbLDFHmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmC Writes value of register C to memory Pointed by F << 8 + L
func gbLDFLmC(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.C)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmD Writes value of register D to memory Pointed by A << 8 + B
func gbLDABmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmD Writes value of register D to memory Pointed by A << 8 + C
func gbLDACmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmD Writes value of register D to memory Pointed by A << 8 + D
func gbLDADmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmD Writes value of register D to memory Pointed by A << 8 + E
func gbLDAEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmD Writes value of register D to memory Pointed by A << 8 + H
func gbLDAHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmD Writes value of register D to memory Pointed by A << 8 + L
func gbLDALmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmD Writes value of register D to memory Pointed by A << 8 + F
func gbLDAFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmD Writes value of register D to memory Pointed by B << 8 + A
func gbLDBAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmD Writes value of register D to memory Pointed by B << 8 + C
func gbLDBCmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmD Writes value of register D to memory Pointed by B << 8 + D
func gbLDBDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmD Writes value of register D to memory Pointed by B << 8 + E
func gbLDBEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmD Writes value of register D to memory Pointed by B << 8 + H
func gbLDBHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmD Writes value of register D to memory Pointed by B << 8 + L
func gbLDBLmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmD Writes value of register D to memory Pointed by B << 8 + F
func gbLDBFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmD Writes value of register D to memory Pointed by C << 8 + A
func gbLDCAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmD Writes value of register D to memory Pointed by C << 8 + B
func gbLDCBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmD Writes value of register D to memory Pointed by C << 8 + D
func gbLDCDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmD Writes value of register D to memory Pointed by C << 8 + E
func gbLDCEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmD Writes value of register D to memory Pointed by C << 8 + H
func gbLDCHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmD Writes value of register D to memory Pointed by C << 8 + L
func gbLDCLmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmD Writes value of register D to memory Pointed by C << 8 + F
func gbLDCFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmD Writes value of register D to memory Pointed by D << 8 + A
func gbLDDAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmD Writes value of register D to memory Pointed by D << 8 + B
func gbLDDBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmD Writes value of register D to memory Pointed by D << 8 + C
func gbLDDCmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmD Writes value of register D to memory Pointed by D << 8 + E
func gbLDDEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmD Writes value of register D to memory Pointed by D << 8 + H
func gbLDDHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmD Writes value of register D to memory Pointed by D << 8 + L
func gbLDDLmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmD Writes value of register D to memory Pointed by D << 8 + F
func gbLDDFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmD Writes value of register D to memory Pointed by E << 8 + A
func gbLDEAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmD Writes value of register D to memory Pointed by E << 8 + B
func gbLDEBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmD Writes value of register D to memory Pointed by E << 8 + C
func gbLDECmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmD Writes value of register D to memory Pointed by E << 8 + D
func gbLDEDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmD Writes value of register D to memory Pointed by E << 8 + H
func gbLDEHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmD Writes value of register D to memory Pointed by E << 8 + L
func gbLDELmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmD Writes value of register D to memory Pointed by E << 8 + F
func gbLDEFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmD Writes value of register D to memory Pointed by H << 8 + A
func gbLDHAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmD Writes value of register D to memory Pointed by H << 8 + B
func gbLDHBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmD Writes value of register D to memory Pointed by H << 8 + C
func gbLDHCmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmD Writes value of register D to memory Pointed by H << 8 + D
func gbLDHDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmD Writes value of register D to memory Pointed by H << 8 + E
func gbLDHEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmD Writes value of register D to memory Pointed by H << 8 + L
func gbLDHLmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmD Writes value of register D to memory Pointed by H << 8 + F
func gbLDHFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmD Writes value of register D to memory Pointed by L << 8 + A
func gbLDLAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmD Writes value of register D to memory Pointed by L << 8 + B
func gbLDLBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmD Writes value of register D to memory Pointed by L << 8 + C
func gbLDLCmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmD Writes value of register D to memory Pointed by L << 8 + D
func gbLDLDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmD Writes value of register D to memory Pointed by L << 8 + E
func gbLDLEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmD Writes value of register D to memory Pointed by L << 8 + H
func gbLDLHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmD Writes value of register D to memory Pointed by L << 8 + F
func gbLDLFmD(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmD Writes value of register D to memory Pointed by F << 8 + A
func gbLDFAmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmD Writes value of register D to memory Pointed by F << 8 + B
func gbLDFBmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmD Writes value of register D to memory Pointed by F << 8 + C
func gbLDFCmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmD Writes value of register D to memory Pointed by F << 8 + D
func gbLDFDmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmD Writes value of register D to memory Pointed by F << 8 + E
func gbLDFEmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmD Writes value of register D to memory Pointed by F << 8 + H
func gbLDFHmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmD Writes value of register D to memory Pointed by F << 8 + L
func gbLDFLmD(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.D)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmE Writes value of register E to memory Pointed by A << 8 + B
func gbLDABmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmE Writes value of register E to memory Pointed by A << 8 + C
func gbLDACmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmE Writes value of register E to memory Pointed by A << 8 + D
func gbLDADmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmE Writes value of register E to memory Pointed by A << 8 + E
func gbLDAEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmE Writes value of register E to memory Pointed by A << 8 + H
func gbLDAHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmE Writes value of register E to memory Pointed by A << 8 + L
func gbLDALmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmE Writes value of register E to memory Pointed by A << 8 + F
func gbLDAFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmE Writes value of register E to memory Pointed by B << 8 + A
func gbLDBAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmE Writes value of register E to memory Pointed by B << 8 + C
func gbLDBCmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmE Writes value of register E to memory Pointed by B << 8 + D
func gbLDBDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmE Writes value of register E to memory Pointed by B << 8 + E
func gbLDBEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmE Writes value of register E to memory Pointed by B << 8 + H
func gbLDBHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmE Writes value of register E to memory Pointed by B << 8 + L
func gbLDBLmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmE Writes value of register E to memory Pointed by B << 8 + F
func gbLDBFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmE Writes value of register E to memory Pointed by C << 8 + A
func gbLDCAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmE Writes value of register E to memory Pointed by C << 8 + B
func gbLDCBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmE Writes value of register E to memory Pointed by C << 8 + D
func gbLDCDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmE Writes value of register E to memory Pointed by C << 8 + E
func gbLDCEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmE Writes value of register E to memory Pointed by C << 8 + H
func gbLDCHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmE Writes value of register E to memory Pointed by C << 8 + L
func gbLDCLmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmE Writes value of register E to memory Pointed by C << 8 + F
func gbLDCFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmE Writes value of register E to memory Pointed by D << 8 + A
func gbLDDAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmE Writes value of register E to memory Pointed by D << 8 + B
func gbLDDBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmE Writes value of register E to memory Pointed by D << 8 + C
func gbLDDCmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmE Writes value of register E to memory Pointed by D << 8 + E
func gbLDDEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmE Writes value of register E to memory Pointed by D << 8 + H
func gbLDDHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmE Writes value of register E to memory Pointed by D << 8 + L
func gbLDDLmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmE Writes value of register E to memory Pointed by D << 8 + F
func gbLDDFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmE Writes value of register E to memory Pointed by E << 8 + A
func gbLDEAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmE Writes value of register E to memory Pointed by E << 8 + B
func gbLDEBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmE Writes value of register E to memory Pointed by E << 8 + C
func gbLDECmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmE Writes value of register E to memory Pointed by E << 8 + D
func gbLDEDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmE Writes value of register E to memory Pointed by E << 8 + H
func gbLDEHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmE Writes value of register E to memory Pointed by E << 8 + L
func gbLDELmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmE Writes value of register E to memory Pointed by E << 8 + F
func gbLDEFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmE Writes value of register E to memory Pointed by H << 8 + A
func gbLDHAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmE Writes value of register E to memory Pointed by H << 8 + B
func gbLDHBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmE Writes value of register E to memory Pointed by H << 8 + C
func gbLDHCmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmE Writes value of register E to memory Pointed by H << 8 + D
func gbLDHDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmE Writes value of register E to memory Pointed by H << 8 + E
func gbLDHEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmE Writes value of register E to memory Pointed by H << 8 + L
func gbLDHLmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmE Writes value of register E to memory Pointed by H << 8 + F
func gbLDHFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmE Writes value of register E to memory Pointed by L << 8 + A
func gbLDLAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmE Writes value of register E to memory Pointed by L << 8 + B
func gbLDLBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmE Writes value of register E to memory Pointed by L << 8 + C
func gbLDLCmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmE Writes value of register E to memory Pointed by L << 8 + D
func gbLDLDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmE Writes value of register E to memory Pointed by L << 8 + E
func gbLDLEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmE Writes value of register E to memory Pointed by L << 8 + H
func gbLDLHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmE Writes value of register E to memory Pointed by L << 8 + F
func gbLDLFmE(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmE Writes value of register E to memory Pointed by F << 8 + A
func gbLDFAmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmE Writes value of register E to memory Pointed by F << 8 + B
func gbLDFBmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmE Writes value of register E to memory Pointed by F << 8 + C
func gbLDFCmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmE Writes value of register E to memory Pointed by F << 8 + D
func gbLDFDmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmE Writes value of register E to memory Pointed by F << 8 + E
func gbLDFEmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmE Writes value of register E to memory Pointed by F << 8 + H
func gbLDFHmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmE Writes value of register E to memory Pointed by F << 8 + L
func gbLDFLmE(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.E)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmH Writes value of register H to memory Pointed by A << 8 + B
func gbLDABmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmH Writes value of register H to memory Pointed by A << 8 + C
func gbLDACmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmH Writes value of register H to memory Pointed by A << 8 + D
func gbLDADmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmH Writes value of register H to memory Pointed by A << 8 + E
func gbLDAEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmH Writes value of register H to memory Pointed by A << 8 + H
func gbLDAHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmH Writes value of register H to memory Pointed by A << 8 + L
func gbLDALmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmH Writes value of register H to memory Pointed by A << 8 + F
func gbLDAFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmH Writes value of register H to memory Pointed by B << 8 + A
func gbLDBAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmH Writes value of register H to memory Pointed by B << 8 + C
func gbLDBCmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmH Writes value of register H to memory Pointed by B << 8 + D
func gbLDBDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmH Writes value of register H to memory Pointed by B << 8 + E
func gbLDBEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmH Writes value of register H to memory Pointed by B << 8 + H
func gbLDBHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmH Writes value of register H to memory Pointed by B << 8 + L
func gbLDBLmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmH Writes value of register H to memory Pointed by B << 8 + F
func gbLDBFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmH Writes value of register H to memory Pointed by C << 8 + A
func gbLDCAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmH Writes value of register H to memory Pointed by C << 8 + B
func gbLDCBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmH Writes value of register H to memory Pointed by C << 8 + D
func gbLDCDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmH Writes value of register H to memory Pointed by C << 8 + E
func gbLDCEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmH Writes value of register H to memory Pointed by C << 8 + H
func gbLDCHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmH Writes value of register H to memory Pointed by C << 8 + L
func gbLDCLmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmH Writes value of register H to memory Pointed by C << 8 + F
func gbLDCFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmH Writes value of register H to memory Pointed by D << 8 + A
func gbLDDAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmH Writes value of register H to memory Pointed by D << 8 + B
func gbLDDBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmH Writes value of register H to memory Pointed by D << 8 + C
func gbLDDCmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmH Writes value of register H to memory Pointed by D << 8 + E
func gbLDDEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmH Writes value of register H to memory Pointed by D << 8 + H
func gbLDDHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmH Writes value of register H to memory Pointed by D << 8 + L
func gbLDDLmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmH Writes value of register H to memory Pointed by D << 8 + F
func gbLDDFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmH Writes value of register H to memory Pointed by E << 8 + A
func gbLDEAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmH Writes value of register H to memory Pointed by E << 8 + B
func gbLDEBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmH Writes value of register H to memory Pointed by E << 8 + C
func gbLDECmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmH Writes value of register H to memory Pointed by E << 8 + D
func gbLDEDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmH Writes value of register H to memory Pointed by E << 8 + H
func gbLDEHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmH Writes value of register H to memory Pointed by E << 8 + L
func gbLDELmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmH Writes value of register H to memory Pointed by E << 8 + F
func gbLDEFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmH Writes value of register H to memory Pointed by H << 8 + A
func gbLDHAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmH Writes value of register H to memory Pointed by H << 8 + B
func gbLDHBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmH Writes value of register H to memory Pointed by H << 8 + C
func gbLDHCmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmH Writes value of register H to memory Pointed by H << 8 + D
func gbLDHDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmH Writes value of register H to memory Pointed by H << 8 + E
func gbLDHEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmH Writes value of register H to memory Pointed by H << 8 + L
func gbLDHLmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmH Writes value of register H to memory Pointed by H << 8 + F
func gbLDHFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmH Writes value of register H to memory Pointed by L << 8 + A
func gbLDLAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmH Writes value of register H to memory Pointed by L << 8 + B
func gbLDLBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmH Writes value of register H to memory Pointed by L << 8 + C
func gbLDLCmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmH Writes value of register H to memory Pointed by L << 8 + D
func gbLDLDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmH Writes value of register H to memory Pointed by L << 8 + E
func gbLDLEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmH Writes value of register H to memory Pointed by L << 8 + H
func gbLDLHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmH Writes value of register H to memory Pointed by L << 8 + F
func gbLDLFmH(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmH Writes value of register H to memory Pointed by F << 8 + A
func gbLDFAmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmH Writes value of register H to memory Pointed by F << 8 + B
func gbLDFBmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmH Writes value of register H to memory Pointed by F << 8 + C
func gbLDFCmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmH Writes value of register H to memory Pointed by F << 8 + D
func gbLDFDmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmH Writes value of register H to memory Pointed by F << 8 + E
func gbLDFEmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmH Writes value of register H to memory Pointed by F << 8 + H
func gbLDFHmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmH Writes value of register H to memory Pointed by F << 8 + L
func gbLDFLmH(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.H)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmL Writes value of register L to memory Pointed by A << 8 + B
func gbLDABmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmL Writes value of register L to memory Pointed by A << 8 + C
func gbLDACmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmL Writes value of register L to memory Pointed by A << 8 + D
func gbLDADmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmL Writes value of register L to memory Pointed by A << 8 + E
func gbLDAEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmL Writes value of register L to memory Pointed by A << 8 + H
func gbLDAHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmL Writes value of register L to memory Pointed by A << 8 + L
func gbLDALmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmL Writes value of register L to memory Pointed by A << 8 + F
func gbLDAFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmL Writes value of register L to memory Pointed by B << 8 + A
func gbLDBAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmL Writes value of register L to memory Pointed by B << 8 + C
func gbLDBCmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmL Writes value of register L to memory Pointed by B << 8 + D
func gbLDBDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmL Writes value of register L to memory Pointed by B << 8 + E
func gbLDBEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmL Writes value of register L to memory Pointed by B << 8 + H
func gbLDBHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmL Writes value of register L to memory Pointed by B << 8 + L
func gbLDBLmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmL Writes value of register L to memory Pointed by B << 8 + F
func gbLDBFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmL Writes value of register L to memory Pointed by C << 8 + A
func gbLDCAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmL Writes value of register L to memory Pointed by C << 8 + B
func gbLDCBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmL Writes value of register L to memory Pointed by C << 8 + D
func gbLDCDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmL Writes value of register L to memory Pointed by C << 8 + E
func gbLDCEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmL Writes value of register L to memory Pointed by C << 8 + H
func gbLDCHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmL Writes value of register L to memory Pointed by C << 8 + L
func gbLDCLmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmL Writes value of register L to memory Pointed by C << 8 + F
func gbLDCFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmL Writes value of register L to memory Pointed by D << 8 + A
func gbLDDAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmL Writes value of register L to memory Pointed by D << 8 + B
func gbLDDBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmL Writes value of register L to memory Pointed by D << 8 + C
func gbLDDCmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmL Writes value of register L to memory Pointed by D << 8 + E
func gbLDDEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmL Writes value of register L to memory Pointed by D << 8 + H
func gbLDDHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmL Writes value of register L to memory Pointed by D << 8 + L
func gbLDDLmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmL Writes value of register L to memory Pointed by D << 8 + F
func gbLDDFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmL Writes value of register L to memory Pointed by E << 8 + A
func gbLDEAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmL Writes value of register L to memory Pointed by E << 8 + B
func gbLDEBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmL Writes value of register L to memory Pointed by E << 8 + C
func gbLDECmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmL Writes value of register L to memory Pointed by E << 8 + D
func gbLDEDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmL Writes value of register L to memory Pointed by E << 8 + H
func gbLDEHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmL Writes value of register L to memory Pointed by E << 8 + L
func gbLDELmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmL Writes value of register L to memory Pointed by E << 8 + F
func gbLDEFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmL Writes value of register L to memory Pointed by H << 8 + A
func gbLDHAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmL Writes value of register L to memory Pointed by H << 8 + B
func gbLDHBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmL Writes value of register L to memory Pointed by H << 8 + C
func gbLDHCmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmL Writes value of register L to memory Pointed by H << 8 + D
func gbLDHDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmL Writes value of register L to memory Pointed by H << 8 + E
func gbLDHEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmL Writes value of register L to memory Pointed by H << 8 + L
func gbLDHLmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmL Writes value of register L to memory Pointed by H << 8 + F
func gbLDHFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmL Writes value of register L to memory Pointed by L << 8 + A
func gbLDLAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmL Writes value of register L to memory Pointed by L << 8 + B
func gbLDLBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmL Writes value of register L to memory Pointed by L << 8 + C
func gbLDLCmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmL Writes value of register L to memory Pointed by L << 8 + D
func gbLDLDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmL Writes value of register L to memory Pointed by L << 8 + E
func gbLDLEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmL Writes value of register L to memory Pointed by L << 8 + H
func gbLDLHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmL Writes value of register L to memory Pointed by L << 8 + F
func gbLDLFmL(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmL Writes value of register L to memory Pointed by F << 8 + A
func gbLDFAmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmL Writes value of register L to memory Pointed by F << 8 + B
func gbLDFBmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmL Writes value of register L to memory Pointed by F << 8 + C
func gbLDFCmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmL Writes value of register L to memory Pointed by F << 8 + D
func gbLDFDmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmL Writes value of register L to memory Pointed by F << 8 + E
func gbLDFEmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmL Writes value of register L to memory Pointed by F << 8 + H
func gbLDFHmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmL Writes value of register L to memory Pointed by F << 8 + L
func gbLDFLmL(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.L)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDABmF Writes value of register F to memory Pointed by A << 8 + B
func gbLDABmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDACmF Writes value of register F to memory Pointed by A << 8 + C
func gbLDACmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDADmF Writes value of register F to memory Pointed by A << 8 + D
func gbLDADmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAEmF Writes value of register F to memory Pointed by A << 8 + E
func gbLDAEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAHmF Writes value of register F to memory Pointed by A << 8 + H
func gbLDAHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDALmF Writes value of register F to memory Pointed by A << 8 + L
func gbLDALmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAFmF Writes value of register F to memory Pointed by A << 8 + F
func gbLDAFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBAmF Writes value of register F to memory Pointed by B << 8 + A
func gbLDBAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBCmF Writes value of register F to memory Pointed by B << 8 + C
func gbLDBCmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBDmF Writes value of register F to memory Pointed by B << 8 + D
func gbLDBDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBEmF Writes value of register F to memory Pointed by B << 8 + E
func gbLDBEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBHmF Writes value of register F to memory Pointed by B << 8 + H
func gbLDBHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBLmF Writes value of register F to memory Pointed by B << 8 + L
func gbLDBLmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDBFmF Writes value of register F to memory Pointed by B << 8 + F
func gbLDBFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCAmF Writes value of register F to memory Pointed by C << 8 + A
func gbLDCAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCBmF Writes value of register F to memory Pointed by C << 8 + B
func gbLDCBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCDmF Writes value of register F to memory Pointed by C << 8 + D
func gbLDCDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCEmF Writes value of register F to memory Pointed by C << 8 + E
func gbLDCEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCHmF Writes value of register F to memory Pointed by C << 8 + H
func gbLDCHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCLmF Writes value of register F to memory Pointed by C << 8 + L
func gbLDCLmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDCFmF Writes value of register F to memory Pointed by C << 8 + F
func gbLDCFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDAmF Writes value of register F to memory Pointed by D << 8 + A
func gbLDDAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDBmF Writes value of register F to memory Pointed by D << 8 + B
func gbLDDBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDCmF Writes value of register F to memory Pointed by D << 8 + C
func gbLDDCmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDEmF Writes value of register F to memory Pointed by D << 8 + E
func gbLDDEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDHmF Writes value of register F to memory Pointed by D << 8 + H
func gbLDDHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDLmF Writes value of register F to memory Pointed by D << 8 + L
func gbLDDLmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDDFmF Writes value of register F to memory Pointed by D << 8 + F
func gbLDDFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEAmF Writes value of register F to memory Pointed by E << 8 + A
func gbLDEAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEBmF Writes value of register F to memory Pointed by E << 8 + B
func gbLDEBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDECmF Writes value of register F to memory Pointed by E << 8 + C
func gbLDECmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEDmF Writes value of register F to memory Pointed by E << 8 + D
func gbLDEDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEHmF Writes value of register F to memory Pointed by E << 8 + H
func gbLDEHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDELmF Writes value of register F to memory Pointed by E << 8 + L
func gbLDELmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDEFmF Writes value of register F to memory Pointed by E << 8 + F
func gbLDEFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHAmF Writes value of register F to memory Pointed by H << 8 + A
func gbLDHAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHBmF Writes value of register F to memory Pointed by H << 8 + B
func gbLDHBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHCmF Writes value of register F to memory Pointed by H << 8 + C
func gbLDHCmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHDmF Writes value of register F to memory Pointed by H << 8 + D
func gbLDHDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHEmF Writes value of register F to memory Pointed by H << 8 + E
func gbLDHEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLmF Writes value of register F to memory Pointed by H << 8 + L
func gbLDHLmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHFmF Writes value of register F to memory Pointed by H << 8 + F
func gbLDHFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLAmF Writes value of register F to memory Pointed by L << 8 + A
func gbLDLAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLBmF Writes value of register F to memory Pointed by L << 8 + B
func gbLDLBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLCmF Writes value of register F to memory Pointed by L << 8 + C
func gbLDLCmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLDmF Writes value of register F to memory Pointed by L << 8 + D
func gbLDLDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLEmF Writes value of register F to memory Pointed by L << 8 + E
func gbLDLEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLHmF Writes value of register F to memory Pointed by L << 8 + H
func gbLDLHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDLFmF Writes value of register F to memory Pointed by L << 8 + F
func gbLDLFmF(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFAmF Writes value of register F to memory Pointed by F << 8 + A
func gbLDFAmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFBmF Writes value of register F to memory Pointed by F << 8 + B
func gbLDFBmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFCmF Writes value of register F to memory Pointed by F << 8 + C
func gbLDFCmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFDmF Writes value of register F to memory Pointed by F << 8 + D
func gbLDFDmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFEmF Writes value of register F to memory Pointed by F << 8 + E
func gbLDFEmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFHmF Writes value of register F to memory Pointed by F << 8 + H
func gbLDFHmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDFLmF Writes value of register F to memory Pointed by F << 8 + L
func gbLDFLmF(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Memory.WriteByte(hl, cpu.Registers.F)
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDmmA Writes register A to memory pointed by PC
func gbLDmmA(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.A)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmB Writes register B to memory pointed by PC
func gbLDmmB(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.B)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmC Writes register C to memory pointed by PC
func gbLDmmC(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.C)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmD Writes register D to memory pointed by PC
func gbLDmmD(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.D)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmE Writes register E to memory pointed by PC
func gbLDmmE(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.E)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmH Writes register H to memory pointed by PC
func gbLDmmH(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.H)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmL Writes register L to memory pointed by PC
func gbLDmmL(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.L)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDmmF Writes register F to memory pointed by PC
func gbLDmmF(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.PC, cpu.Registers.F)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABAm  Reads from memory pointed by A << 8 + B and writes to A
func gbLDABAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACAm  Reads from memory pointed by A << 8 + C and writes to A
func gbLDACAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADAm  Reads from memory pointed by A << 8 + D and writes to A
func gbLDADAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEAm  Reads from memory pointed by A << 8 + E and writes to A
func gbLDAEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHAm  Reads from memory pointed by A << 8 + H and writes to A
func gbLDAHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALAm  Reads from memory pointed by A << 8 + L and writes to A
func gbLDALAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFAm  Reads from memory pointed by A << 8 + F and writes to A
func gbLDAFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBAAm  Reads from memory pointed by B << 8 + A and writes to A
func gbLDBAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCAm  Reads from memory pointed by B << 8 + C and writes to A
func gbLDBCAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDAm  Reads from memory pointed by B << 8 + D and writes to A
func gbLDBDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEAm  Reads from memory pointed by B << 8 + E and writes to A
func gbLDBEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHAm  Reads from memory pointed by B << 8 + H and writes to A
func gbLDBHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLAm  Reads from memory pointed by B << 8 + L and writes to A
func gbLDBLAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFAm  Reads from memory pointed by B << 8 + F and writes to A
func gbLDBFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCAAm  Reads from memory pointed by C << 8 + A and writes to A
func gbLDCAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBAm  Reads from memory pointed by C << 8 + B and writes to A
func gbLDCBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDAm  Reads from memory pointed by C << 8 + D and writes to A
func gbLDCDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEAm  Reads from memory pointed by C << 8 + E and writes to A
func gbLDCEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHAm  Reads from memory pointed by C << 8 + H and writes to A
func gbLDCHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLAm  Reads from memory pointed by C << 8 + L and writes to A
func gbLDCLAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFAm  Reads from memory pointed by C << 8 + F and writes to A
func gbLDCFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDAAm  Reads from memory pointed by D << 8 + A and writes to A
func gbLDDAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBAm  Reads from memory pointed by D << 8 + B and writes to A
func gbLDDBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCAm  Reads from memory pointed by D << 8 + C and writes to A
func gbLDDCAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEAm  Reads from memory pointed by D << 8 + E and writes to A
func gbLDDEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHAm  Reads from memory pointed by D << 8 + H and writes to A
func gbLDDHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLAm  Reads from memory pointed by D << 8 + L and writes to A
func gbLDDLAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFAm  Reads from memory pointed by D << 8 + F and writes to A
func gbLDDFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEAAm  Reads from memory pointed by E << 8 + A and writes to A
func gbLDEAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBAm  Reads from memory pointed by E << 8 + B and writes to A
func gbLDEBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECAm  Reads from memory pointed by E << 8 + C and writes to A
func gbLDECAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDAm  Reads from memory pointed by E << 8 + D and writes to A
func gbLDEDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHAm  Reads from memory pointed by E << 8 + H and writes to A
func gbLDEHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELAm  Reads from memory pointed by E << 8 + L and writes to A
func gbLDELAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFAm  Reads from memory pointed by E << 8 + F and writes to A
func gbLDEFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHAAm  Reads from memory pointed by H << 8 + A and writes to A
func gbLDHAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBAm  Reads from memory pointed by H << 8 + B and writes to A
func gbLDHBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCAm  Reads from memory pointed by H << 8 + C and writes to A
func gbLDHCAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDAm  Reads from memory pointed by H << 8 + D and writes to A
func gbLDHDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEAm  Reads from memory pointed by H << 8 + E and writes to A
func gbLDHEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLAm  Reads from memory pointed by H << 8 + L and writes to A
func gbLDHLAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFAm  Reads from memory pointed by H << 8 + F and writes to A
func gbLDHFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLAAm  Reads from memory pointed by L << 8 + A and writes to A
func gbLDLAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBAm  Reads from memory pointed by L << 8 + B and writes to A
func gbLDLBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCAm  Reads from memory pointed by L << 8 + C and writes to A
func gbLDLCAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDAm  Reads from memory pointed by L << 8 + D and writes to A
func gbLDLDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEAm  Reads from memory pointed by L << 8 + E and writes to A
func gbLDLEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHAm  Reads from memory pointed by L << 8 + H and writes to A
func gbLDLHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFAm  Reads from memory pointed by L << 8 + F and writes to A
func gbLDLFAm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFAAm  Reads from memory pointed by F << 8 + A and writes to A
func gbLDFAAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBAm  Reads from memory pointed by F << 8 + B and writes to A
func gbLDFBAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCAm  Reads from memory pointed by F << 8 + C and writes to A
func gbLDFCAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDAm  Reads from memory pointed by F << 8 + D and writes to A
func gbLDFDAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEAm  Reads from memory pointed by F << 8 + E and writes to A
func gbLDFEAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHAm  Reads from memory pointed by F << 8 + H and writes to A
func gbLDFHAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLAm  Reads from memory pointed by F << 8 + L and writes to A
func gbLDFLAm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.A = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABBm  Reads from memory pointed by A << 8 + B and writes to B
func gbLDABBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACBm  Reads from memory pointed by A << 8 + C and writes to B
func gbLDACBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADBm  Reads from memory pointed by A << 8 + D and writes to B
func gbLDADBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEBm  Reads from memory pointed by A << 8 + E and writes to B
func gbLDAEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHBm  Reads from memory pointed by A << 8 + H and writes to B
func gbLDAHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALBm  Reads from memory pointed by A << 8 + L and writes to B
func gbLDALBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFBm  Reads from memory pointed by A << 8 + F and writes to B
func gbLDAFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBABm  Reads from memory pointed by B << 8 + A and writes to B
func gbLDBABm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCBm  Reads from memory pointed by B << 8 + C and writes to B
func gbLDBCBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDBm  Reads from memory pointed by B << 8 + D and writes to B
func gbLDBDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEBm  Reads from memory pointed by B << 8 + E and writes to B
func gbLDBEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHBm  Reads from memory pointed by B << 8 + H and writes to B
func gbLDBHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLBm  Reads from memory pointed by B << 8 + L and writes to B
func gbLDBLBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFBm  Reads from memory pointed by B << 8 + F and writes to B
func gbLDBFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCABm  Reads from memory pointed by C << 8 + A and writes to B
func gbLDCABm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBBm  Reads from memory pointed by C << 8 + B and writes to B
func gbLDCBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDBm  Reads from memory pointed by C << 8 + D and writes to B
func gbLDCDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEBm  Reads from memory pointed by C << 8 + E and writes to B
func gbLDCEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHBm  Reads from memory pointed by C << 8 + H and writes to B
func gbLDCHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLBm  Reads from memory pointed by C << 8 + L and writes to B
func gbLDCLBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFBm  Reads from memory pointed by C << 8 + F and writes to B
func gbLDCFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDABm  Reads from memory pointed by D << 8 + A and writes to B
func gbLDDABm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBBm  Reads from memory pointed by D << 8 + B and writes to B
func gbLDDBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCBm  Reads from memory pointed by D << 8 + C and writes to B
func gbLDDCBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEBm  Reads from memory pointed by D << 8 + E and writes to B
func gbLDDEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHBm  Reads from memory pointed by D << 8 + H and writes to B
func gbLDDHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLBm  Reads from memory pointed by D << 8 + L and writes to B
func gbLDDLBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFBm  Reads from memory pointed by D << 8 + F and writes to B
func gbLDDFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEABm  Reads from memory pointed by E << 8 + A and writes to B
func gbLDEABm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBBm  Reads from memory pointed by E << 8 + B and writes to B
func gbLDEBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECBm  Reads from memory pointed by E << 8 + C and writes to B
func gbLDECBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDBm  Reads from memory pointed by E << 8 + D and writes to B
func gbLDEDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHBm  Reads from memory pointed by E << 8 + H and writes to B
func gbLDEHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELBm  Reads from memory pointed by E << 8 + L and writes to B
func gbLDELBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFBm  Reads from memory pointed by E << 8 + F and writes to B
func gbLDEFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHABm  Reads from memory pointed by H << 8 + A and writes to B
func gbLDHABm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBBm  Reads from memory pointed by H << 8 + B and writes to B
func gbLDHBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCBm  Reads from memory pointed by H << 8 + C and writes to B
func gbLDHCBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDBm  Reads from memory pointed by H << 8 + D and writes to B
func gbLDHDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEBm  Reads from memory pointed by H << 8 + E and writes to B
func gbLDHEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLBm  Reads from memory pointed by H << 8 + L and writes to B
func gbLDHLBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFBm  Reads from memory pointed by H << 8 + F and writes to B
func gbLDHFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLABm  Reads from memory pointed by L << 8 + A and writes to B
func gbLDLABm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBBm  Reads from memory pointed by L << 8 + B and writes to B
func gbLDLBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCBm  Reads from memory pointed by L << 8 + C and writes to B
func gbLDLCBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDBm  Reads from memory pointed by L << 8 + D and writes to B
func gbLDLDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEBm  Reads from memory pointed by L << 8 + E and writes to B
func gbLDLEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHBm  Reads from memory pointed by L << 8 + H and writes to B
func gbLDLHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFBm  Reads from memory pointed by L << 8 + F and writes to B
func gbLDLFBm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFABm  Reads from memory pointed by F << 8 + A and writes to B
func gbLDFABm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBBm  Reads from memory pointed by F << 8 + B and writes to B
func gbLDFBBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCBm  Reads from memory pointed by F << 8 + C and writes to B
func gbLDFCBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDBm  Reads from memory pointed by F << 8 + D and writes to B
func gbLDFDBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEBm  Reads from memory pointed by F << 8 + E and writes to B
func gbLDFEBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHBm  Reads from memory pointed by F << 8 + H and writes to B
func gbLDFHBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLBm  Reads from memory pointed by F << 8 + L and writes to B
func gbLDFLBm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.B = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABCm  Reads from memory pointed by A << 8 + B and writes to C
func gbLDABCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACCm  Reads from memory pointed by A << 8 + C and writes to C
func gbLDACCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADCm  Reads from memory pointed by A << 8 + D and writes to C
func gbLDADCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAECm  Reads from memory pointed by A << 8 + E and writes to C
func gbLDAECm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHCm  Reads from memory pointed by A << 8 + H and writes to C
func gbLDAHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALCm  Reads from memory pointed by A << 8 + L and writes to C
func gbLDALCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFCm  Reads from memory pointed by A << 8 + F and writes to C
func gbLDAFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBACm  Reads from memory pointed by B << 8 + A and writes to C
func gbLDBACm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCCm  Reads from memory pointed by B << 8 + C and writes to C
func gbLDBCCm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDCm  Reads from memory pointed by B << 8 + D and writes to C
func gbLDBDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBECm  Reads from memory pointed by B << 8 + E and writes to C
func gbLDBECm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHCm  Reads from memory pointed by B << 8 + H and writes to C
func gbLDBHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLCm  Reads from memory pointed by B << 8 + L and writes to C
func gbLDBLCm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFCm  Reads from memory pointed by B << 8 + F and writes to C
func gbLDBFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCACm  Reads from memory pointed by C << 8 + A and writes to C
func gbLDCACm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBCm  Reads from memory pointed by C << 8 + B and writes to C
func gbLDCBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDCm  Reads from memory pointed by C << 8 + D and writes to C
func gbLDCDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCECm  Reads from memory pointed by C << 8 + E and writes to C
func gbLDCECm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHCm  Reads from memory pointed by C << 8 + H and writes to C
func gbLDCHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLCm  Reads from memory pointed by C << 8 + L and writes to C
func gbLDCLCm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFCm  Reads from memory pointed by C << 8 + F and writes to C
func gbLDCFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDACm  Reads from memory pointed by D << 8 + A and writes to C
func gbLDDACm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBCm  Reads from memory pointed by D << 8 + B and writes to C
func gbLDDBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCCm  Reads from memory pointed by D << 8 + C and writes to C
func gbLDDCCm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDECm  Reads from memory pointed by D << 8 + E and writes to C
func gbLDDECm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHCm  Reads from memory pointed by D << 8 + H and writes to C
func gbLDDHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLCm  Reads from memory pointed by D << 8 + L and writes to C
func gbLDDLCm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFCm  Reads from memory pointed by D << 8 + F and writes to C
func gbLDDFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEACm  Reads from memory pointed by E << 8 + A and writes to C
func gbLDEACm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBCm  Reads from memory pointed by E << 8 + B and writes to C
func gbLDEBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECCm  Reads from memory pointed by E << 8 + C and writes to C
func gbLDECCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDCm  Reads from memory pointed by E << 8 + D and writes to C
func gbLDEDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHCm  Reads from memory pointed by E << 8 + H and writes to C
func gbLDEHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELCm  Reads from memory pointed by E << 8 + L and writes to C
func gbLDELCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFCm  Reads from memory pointed by E << 8 + F and writes to C
func gbLDEFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHACm  Reads from memory pointed by H << 8 + A and writes to C
func gbLDHACm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBCm  Reads from memory pointed by H << 8 + B and writes to C
func gbLDHBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCCm  Reads from memory pointed by H << 8 + C and writes to C
func gbLDHCCm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDCm  Reads from memory pointed by H << 8 + D and writes to C
func gbLDHDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHECm  Reads from memory pointed by H << 8 + E and writes to C
func gbLDHECm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLCm  Reads from memory pointed by H << 8 + L and writes to C
func gbLDHLCm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFCm  Reads from memory pointed by H << 8 + F and writes to C
func gbLDHFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLACm  Reads from memory pointed by L << 8 + A and writes to C
func gbLDLACm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBCm  Reads from memory pointed by L << 8 + B and writes to C
func gbLDLBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCCm  Reads from memory pointed by L << 8 + C and writes to C
func gbLDLCCm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDCm  Reads from memory pointed by L << 8 + D and writes to C
func gbLDLDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLECm  Reads from memory pointed by L << 8 + E and writes to C
func gbLDLECm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHCm  Reads from memory pointed by L << 8 + H and writes to C
func gbLDLHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFCm  Reads from memory pointed by L << 8 + F and writes to C
func gbLDLFCm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFACm  Reads from memory pointed by F << 8 + A and writes to C
func gbLDFACm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBCm  Reads from memory pointed by F << 8 + B and writes to C
func gbLDFBCm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCCm  Reads from memory pointed by F << 8 + C and writes to C
func gbLDFCCm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDCm  Reads from memory pointed by F << 8 + D and writes to C
func gbLDFDCm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFECm  Reads from memory pointed by F << 8 + E and writes to C
func gbLDFECm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHCm  Reads from memory pointed by F << 8 + H and writes to C
func gbLDFHCm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLCm  Reads from memory pointed by F << 8 + L and writes to C
func gbLDFLCm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.C = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABDm  Reads from memory pointed by A << 8 + B and writes to D
func gbLDABDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACDm  Reads from memory pointed by A << 8 + C and writes to D
func gbLDACDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADDm  Reads from memory pointed by A << 8 + D and writes to D
func gbLDADDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEDm  Reads from memory pointed by A << 8 + E and writes to D
func gbLDAEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHDm  Reads from memory pointed by A << 8 + H and writes to D
func gbLDAHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALDm  Reads from memory pointed by A << 8 + L and writes to D
func gbLDALDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFDm  Reads from memory pointed by A << 8 + F and writes to D
func gbLDAFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBADm  Reads from memory pointed by B << 8 + A and writes to D
func gbLDBADm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCDm  Reads from memory pointed by B << 8 + C and writes to D
func gbLDBCDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDDm  Reads from memory pointed by B << 8 + D and writes to D
func gbLDBDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEDm  Reads from memory pointed by B << 8 + E and writes to D
func gbLDBEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHDm  Reads from memory pointed by B << 8 + H and writes to D
func gbLDBHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLDm  Reads from memory pointed by B << 8 + L and writes to D
func gbLDBLDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFDm  Reads from memory pointed by B << 8 + F and writes to D
func gbLDBFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCADm  Reads from memory pointed by C << 8 + A and writes to D
func gbLDCADm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBDm  Reads from memory pointed by C << 8 + B and writes to D
func gbLDCBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDDm  Reads from memory pointed by C << 8 + D and writes to D
func gbLDCDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEDm  Reads from memory pointed by C << 8 + E and writes to D
func gbLDCEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHDm  Reads from memory pointed by C << 8 + H and writes to D
func gbLDCHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLDm  Reads from memory pointed by C << 8 + L and writes to D
func gbLDCLDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFDm  Reads from memory pointed by C << 8 + F and writes to D
func gbLDCFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDADm  Reads from memory pointed by D << 8 + A and writes to D
func gbLDDADm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBDm  Reads from memory pointed by D << 8 + B and writes to D
func gbLDDBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCDm  Reads from memory pointed by D << 8 + C and writes to D
func gbLDDCDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEDm  Reads from memory pointed by D << 8 + E and writes to D
func gbLDDEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHDm  Reads from memory pointed by D << 8 + H and writes to D
func gbLDDHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLDm  Reads from memory pointed by D << 8 + L and writes to D
func gbLDDLDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFDm  Reads from memory pointed by D << 8 + F and writes to D
func gbLDDFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEADm  Reads from memory pointed by E << 8 + A and writes to D
func gbLDEADm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBDm  Reads from memory pointed by E << 8 + B and writes to D
func gbLDEBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECDm  Reads from memory pointed by E << 8 + C and writes to D
func gbLDECDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDDm  Reads from memory pointed by E << 8 + D and writes to D
func gbLDEDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHDm  Reads from memory pointed by E << 8 + H and writes to D
func gbLDEHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELDm  Reads from memory pointed by E << 8 + L and writes to D
func gbLDELDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFDm  Reads from memory pointed by E << 8 + F and writes to D
func gbLDEFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHADm  Reads from memory pointed by H << 8 + A and writes to D
func gbLDHADm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBDm  Reads from memory pointed by H << 8 + B and writes to D
func gbLDHBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCDm  Reads from memory pointed by H << 8 + C and writes to D
func gbLDHCDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDDm  Reads from memory pointed by H << 8 + D and writes to D
func gbLDHDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEDm  Reads from memory pointed by H << 8 + E and writes to D
func gbLDHEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLDm  Reads from memory pointed by H << 8 + L and writes to D
func gbLDHLDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFDm  Reads from memory pointed by H << 8 + F and writes to D
func gbLDHFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLADm  Reads from memory pointed by L << 8 + A and writes to D
func gbLDLADm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBDm  Reads from memory pointed by L << 8 + B and writes to D
func gbLDLBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCDm  Reads from memory pointed by L << 8 + C and writes to D
func gbLDLCDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDDm  Reads from memory pointed by L << 8 + D and writes to D
func gbLDLDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEDm  Reads from memory pointed by L << 8 + E and writes to D
func gbLDLEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHDm  Reads from memory pointed by L << 8 + H and writes to D
func gbLDLHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFDm  Reads from memory pointed by L << 8 + F and writes to D
func gbLDLFDm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFADm  Reads from memory pointed by F << 8 + A and writes to D
func gbLDFADm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBDm  Reads from memory pointed by F << 8 + B and writes to D
func gbLDFBDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCDm  Reads from memory pointed by F << 8 + C and writes to D
func gbLDFCDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDDm  Reads from memory pointed by F << 8 + D and writes to D
func gbLDFDDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEDm  Reads from memory pointed by F << 8 + E and writes to D
func gbLDFEDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHDm  Reads from memory pointed by F << 8 + H and writes to D
func gbLDFHDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLDm  Reads from memory pointed by F << 8 + L and writes to D
func gbLDFLDm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.D = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABEm  Reads from memory pointed by A << 8 + B and writes to E
func gbLDABEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACEm  Reads from memory pointed by A << 8 + C and writes to E
func gbLDACEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADEm  Reads from memory pointed by A << 8 + D and writes to E
func gbLDADEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEEm  Reads from memory pointed by A << 8 + E and writes to E
func gbLDAEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHEm  Reads from memory pointed by A << 8 + H and writes to E
func gbLDAHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALEm  Reads from memory pointed by A << 8 + L and writes to E
func gbLDALEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFEm  Reads from memory pointed by A << 8 + F and writes to E
func gbLDAFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBAEm  Reads from memory pointed by B << 8 + A and writes to E
func gbLDBAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCEm  Reads from memory pointed by B << 8 + C and writes to E
func gbLDBCEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDEm  Reads from memory pointed by B << 8 + D and writes to E
func gbLDBDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEEm  Reads from memory pointed by B << 8 + E and writes to E
func gbLDBEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHEm  Reads from memory pointed by B << 8 + H and writes to E
func gbLDBHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLEm  Reads from memory pointed by B << 8 + L and writes to E
func gbLDBLEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFEm  Reads from memory pointed by B << 8 + F and writes to E
func gbLDBFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCAEm  Reads from memory pointed by C << 8 + A and writes to E
func gbLDCAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBEm  Reads from memory pointed by C << 8 + B and writes to E
func gbLDCBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDEm  Reads from memory pointed by C << 8 + D and writes to E
func gbLDCDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEEm  Reads from memory pointed by C << 8 + E and writes to E
func gbLDCEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHEm  Reads from memory pointed by C << 8 + H and writes to E
func gbLDCHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLEm  Reads from memory pointed by C << 8 + L and writes to E
func gbLDCLEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFEm  Reads from memory pointed by C << 8 + F and writes to E
func gbLDCFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDAEm  Reads from memory pointed by D << 8 + A and writes to E
func gbLDDAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBEm  Reads from memory pointed by D << 8 + B and writes to E
func gbLDDBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCEm  Reads from memory pointed by D << 8 + C and writes to E
func gbLDDCEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEEm  Reads from memory pointed by D << 8 + E and writes to E
func gbLDDEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHEm  Reads from memory pointed by D << 8 + H and writes to E
func gbLDDHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLEm  Reads from memory pointed by D << 8 + L and writes to E
func gbLDDLEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFEm  Reads from memory pointed by D << 8 + F and writes to E
func gbLDDFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEAEm  Reads from memory pointed by E << 8 + A and writes to E
func gbLDEAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBEm  Reads from memory pointed by E << 8 + B and writes to E
func gbLDEBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECEm  Reads from memory pointed by E << 8 + C and writes to E
func gbLDECEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDEm  Reads from memory pointed by E << 8 + D and writes to E
func gbLDEDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHEm  Reads from memory pointed by E << 8 + H and writes to E
func gbLDEHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELEm  Reads from memory pointed by E << 8 + L and writes to E
func gbLDELEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFEm  Reads from memory pointed by E << 8 + F and writes to E
func gbLDEFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHAEm  Reads from memory pointed by H << 8 + A and writes to E
func gbLDHAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBEm  Reads from memory pointed by H << 8 + B and writes to E
func gbLDHBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCEm  Reads from memory pointed by H << 8 + C and writes to E
func gbLDHCEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDEm  Reads from memory pointed by H << 8 + D and writes to E
func gbLDHDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEEm  Reads from memory pointed by H << 8 + E and writes to E
func gbLDHEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLEm  Reads from memory pointed by H << 8 + L and writes to E
func gbLDHLEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFEm  Reads from memory pointed by H << 8 + F and writes to E
func gbLDHFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLAEm  Reads from memory pointed by L << 8 + A and writes to E
func gbLDLAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBEm  Reads from memory pointed by L << 8 + B and writes to E
func gbLDLBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCEm  Reads from memory pointed by L << 8 + C and writes to E
func gbLDLCEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDEm  Reads from memory pointed by L << 8 + D and writes to E
func gbLDLDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEEm  Reads from memory pointed by L << 8 + E and writes to E
func gbLDLEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHEm  Reads from memory pointed by L << 8 + H and writes to E
func gbLDLHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFEm  Reads from memory pointed by L << 8 + F and writes to E
func gbLDLFEm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFAEm  Reads from memory pointed by F << 8 + A and writes to E
func gbLDFAEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBEm  Reads from memory pointed by F << 8 + B and writes to E
func gbLDFBEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCEm  Reads from memory pointed by F << 8 + C and writes to E
func gbLDFCEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDEm  Reads from memory pointed by F << 8 + D and writes to E
func gbLDFDEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEEm  Reads from memory pointed by F << 8 + E and writes to E
func gbLDFEEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHEm  Reads from memory pointed by F << 8 + H and writes to E
func gbLDFHEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLEm  Reads from memory pointed by F << 8 + L and writes to E
func gbLDFLEm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.E = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABHm  Reads from memory pointed by A << 8 + B and writes to H
func gbLDABHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACHm  Reads from memory pointed by A << 8 + C and writes to H
func gbLDACHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADHm  Reads from memory pointed by A << 8 + D and writes to H
func gbLDADHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEHm  Reads from memory pointed by A << 8 + E and writes to H
func gbLDAEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHHm  Reads from memory pointed by A << 8 + H and writes to H
func gbLDAHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALHm  Reads from memory pointed by A << 8 + L and writes to H
func gbLDALHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFHm  Reads from memory pointed by A << 8 + F and writes to H
func gbLDAFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBAHm  Reads from memory pointed by B << 8 + A and writes to H
func gbLDBAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCHm  Reads from memory pointed by B << 8 + C and writes to H
func gbLDBCHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDHm  Reads from memory pointed by B << 8 + D and writes to H
func gbLDBDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEHm  Reads from memory pointed by B << 8 + E and writes to H
func gbLDBEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHHm  Reads from memory pointed by B << 8 + H and writes to H
func gbLDBHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLHm  Reads from memory pointed by B << 8 + L and writes to H
func gbLDBLHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFHm  Reads from memory pointed by B << 8 + F and writes to H
func gbLDBFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCAHm  Reads from memory pointed by C << 8 + A and writes to H
func gbLDCAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBHm  Reads from memory pointed by C << 8 + B and writes to H
func gbLDCBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDHm  Reads from memory pointed by C << 8 + D and writes to H
func gbLDCDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEHm  Reads from memory pointed by C << 8 + E and writes to H
func gbLDCEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHHm  Reads from memory pointed by C << 8 + H and writes to H
func gbLDCHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLHm  Reads from memory pointed by C << 8 + L and writes to H
func gbLDCLHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFHm  Reads from memory pointed by C << 8 + F and writes to H
func gbLDCFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDAHm  Reads from memory pointed by D << 8 + A and writes to H
func gbLDDAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBHm  Reads from memory pointed by D << 8 + B and writes to H
func gbLDDBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCHm  Reads from memory pointed by D << 8 + C and writes to H
func gbLDDCHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEHm  Reads from memory pointed by D << 8 + E and writes to H
func gbLDDEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHHm  Reads from memory pointed by D << 8 + H and writes to H
func gbLDDHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLHm  Reads from memory pointed by D << 8 + L and writes to H
func gbLDDLHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFHm  Reads from memory pointed by D << 8 + F and writes to H
func gbLDDFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEAHm  Reads from memory pointed by E << 8 + A and writes to H
func gbLDEAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBHm  Reads from memory pointed by E << 8 + B and writes to H
func gbLDEBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECHm  Reads from memory pointed by E << 8 + C and writes to H
func gbLDECHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDHm  Reads from memory pointed by E << 8 + D and writes to H
func gbLDEDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHHm  Reads from memory pointed by E << 8 + H and writes to H
func gbLDEHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELHm  Reads from memory pointed by E << 8 + L and writes to H
func gbLDELHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFHm  Reads from memory pointed by E << 8 + F and writes to H
func gbLDEFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHAHm  Reads from memory pointed by H << 8 + A and writes to H
func gbLDHAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBHm  Reads from memory pointed by H << 8 + B and writes to H
func gbLDHBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCHm  Reads from memory pointed by H << 8 + C and writes to H
func gbLDHCHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDHm  Reads from memory pointed by H << 8 + D and writes to H
func gbLDHDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEHm  Reads from memory pointed by H << 8 + E and writes to H
func gbLDHEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLHm  Reads from memory pointed by H << 8 + L and writes to H
func gbLDHLHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFHm  Reads from memory pointed by H << 8 + F and writes to H
func gbLDHFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLAHm  Reads from memory pointed by L << 8 + A and writes to H
func gbLDLAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBHm  Reads from memory pointed by L << 8 + B and writes to H
func gbLDLBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCHm  Reads from memory pointed by L << 8 + C and writes to H
func gbLDLCHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDHm  Reads from memory pointed by L << 8 + D and writes to H
func gbLDLDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEHm  Reads from memory pointed by L << 8 + E and writes to H
func gbLDLEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHHm  Reads from memory pointed by L << 8 + H and writes to H
func gbLDLHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFHm  Reads from memory pointed by L << 8 + F and writes to H
func gbLDLFHm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFAHm  Reads from memory pointed by F << 8 + A and writes to H
func gbLDFAHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBHm  Reads from memory pointed by F << 8 + B and writes to H
func gbLDFBHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCHm  Reads from memory pointed by F << 8 + C and writes to H
func gbLDFCHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDHm  Reads from memory pointed by F << 8 + D and writes to H
func gbLDFDHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEHm  Reads from memory pointed by F << 8 + E and writes to H
func gbLDFEHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHHm  Reads from memory pointed by F << 8 + H and writes to H
func gbLDFHHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLHm  Reads from memory pointed by F << 8 + L and writes to H
func gbLDFLHm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.H = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABLm  Reads from memory pointed by A << 8 + B and writes to L
func gbLDABLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACLm  Reads from memory pointed by A << 8 + C and writes to L
func gbLDACLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADLm  Reads from memory pointed by A << 8 + D and writes to L
func gbLDADLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAELm  Reads from memory pointed by A << 8 + E and writes to L
func gbLDAELm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHLm  Reads from memory pointed by A << 8 + H and writes to L
func gbLDAHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALLm  Reads from memory pointed by A << 8 + L and writes to L
func gbLDALLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFLm  Reads from memory pointed by A << 8 + F and writes to L
func gbLDAFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBALm  Reads from memory pointed by B << 8 + A and writes to L
func gbLDBALm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCLm  Reads from memory pointed by B << 8 + C and writes to L
func gbLDBCLm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDLm  Reads from memory pointed by B << 8 + D and writes to L
func gbLDBDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBELm  Reads from memory pointed by B << 8 + E and writes to L
func gbLDBELm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHLm  Reads from memory pointed by B << 8 + H and writes to L
func gbLDBHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLLm  Reads from memory pointed by B << 8 + L and writes to L
func gbLDBLLm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFLm  Reads from memory pointed by B << 8 + F and writes to L
func gbLDBFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCALm  Reads from memory pointed by C << 8 + A and writes to L
func gbLDCALm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBLm  Reads from memory pointed by C << 8 + B and writes to L
func gbLDCBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDLm  Reads from memory pointed by C << 8 + D and writes to L
func gbLDCDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCELm  Reads from memory pointed by C << 8 + E and writes to L
func gbLDCELm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHLm  Reads from memory pointed by C << 8 + H and writes to L
func gbLDCHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLLm  Reads from memory pointed by C << 8 + L and writes to L
func gbLDCLLm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFLm  Reads from memory pointed by C << 8 + F and writes to L
func gbLDCFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDALm  Reads from memory pointed by D << 8 + A and writes to L
func gbLDDALm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBLm  Reads from memory pointed by D << 8 + B and writes to L
func gbLDDBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCLm  Reads from memory pointed by D << 8 + C and writes to L
func gbLDDCLm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDELm  Reads from memory pointed by D << 8 + E and writes to L
func gbLDDELm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHLm  Reads from memory pointed by D << 8 + H and writes to L
func gbLDDHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLLm  Reads from memory pointed by D << 8 + L and writes to L
func gbLDDLLm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFLm  Reads from memory pointed by D << 8 + F and writes to L
func gbLDDFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEALm  Reads from memory pointed by E << 8 + A and writes to L
func gbLDEALm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBLm  Reads from memory pointed by E << 8 + B and writes to L
func gbLDEBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECLm  Reads from memory pointed by E << 8 + C and writes to L
func gbLDECLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDLm  Reads from memory pointed by E << 8 + D and writes to L
func gbLDEDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHLm  Reads from memory pointed by E << 8 + H and writes to L
func gbLDEHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELLm  Reads from memory pointed by E << 8 + L and writes to L
func gbLDELLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFLm  Reads from memory pointed by E << 8 + F and writes to L
func gbLDEFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHALm  Reads from memory pointed by H << 8 + A and writes to L
func gbLDHALm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBLm  Reads from memory pointed by H << 8 + B and writes to L
func gbLDHBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCLm  Reads from memory pointed by H << 8 + C and writes to L
func gbLDHCLm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDLm  Reads from memory pointed by H << 8 + D and writes to L
func gbLDHDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHELm  Reads from memory pointed by H << 8 + E and writes to L
func gbLDHELm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLLm  Reads from memory pointed by H << 8 + L and writes to L
func gbLDHLLm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFLm  Reads from memory pointed by H << 8 + F and writes to L
func gbLDHFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLALm  Reads from memory pointed by L << 8 + A and writes to L
func gbLDLALm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBLm  Reads from memory pointed by L << 8 + B and writes to L
func gbLDLBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCLm  Reads from memory pointed by L << 8 + C and writes to L
func gbLDLCLm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDLm  Reads from memory pointed by L << 8 + D and writes to L
func gbLDLDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLELm  Reads from memory pointed by L << 8 + E and writes to L
func gbLDLELm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHLm  Reads from memory pointed by L << 8 + H and writes to L
func gbLDLHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFLm  Reads from memory pointed by L << 8 + F and writes to L
func gbLDLFLm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFALm  Reads from memory pointed by F << 8 + A and writes to L
func gbLDFALm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBLm  Reads from memory pointed by F << 8 + B and writes to L
func gbLDFBLm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCLm  Reads from memory pointed by F << 8 + C and writes to L
func gbLDFCLm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDLm  Reads from memory pointed by F << 8 + D and writes to L
func gbLDFDLm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFELm  Reads from memory pointed by F << 8 + E and writes to L
func gbLDFELm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHLm  Reads from memory pointed by F << 8 + H and writes to L
func gbLDFHLm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLLm  Reads from memory pointed by F << 8 + L and writes to L
func gbLDFLLm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.L = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABFm  Reads from memory pointed by A << 8 + B and writes to F
func gbLDABFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDACFm  Reads from memory pointed by A << 8 + C and writes to F
func gbLDACFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDADFm  Reads from memory pointed by A << 8 + D and writes to F
func gbLDADFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAEFm  Reads from memory pointed by A << 8 + E and writes to F
func gbLDAEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAHFm  Reads from memory pointed by A << 8 + H and writes to F
func gbLDAHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDALFm  Reads from memory pointed by A << 8 + L and writes to F
func gbLDALFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAFFm  Reads from memory pointed by A << 8 + F and writes to F
func gbLDAFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.A) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBAFm  Reads from memory pointed by B << 8 + A and writes to F
func gbLDBAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBCFm  Reads from memory pointed by B << 8 + C and writes to F
func gbLDBCFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBDFm  Reads from memory pointed by B << 8 + D and writes to F
func gbLDBDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBEFm  Reads from memory pointed by B << 8 + E and writes to F
func gbLDBEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBHFm  Reads from memory pointed by B << 8 + H and writes to F
func gbLDBHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBLFm  Reads from memory pointed by B << 8 + L and writes to F
func gbLDBLFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBFFm  Reads from memory pointed by B << 8 + F and writes to F
func gbLDBFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.B) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCAFm  Reads from memory pointed by C << 8 + A and writes to F
func gbLDCAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCBFm  Reads from memory pointed by C << 8 + B and writes to F
func gbLDCBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCDFm  Reads from memory pointed by C << 8 + D and writes to F
func gbLDCDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCEFm  Reads from memory pointed by C << 8 + E and writes to F
func gbLDCEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCHFm  Reads from memory pointed by C << 8 + H and writes to F
func gbLDCHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCLFm  Reads from memory pointed by C << 8 + L and writes to F
func gbLDCLFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCFFm  Reads from memory pointed by C << 8 + F and writes to F
func gbLDCFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.C) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDAFm  Reads from memory pointed by D << 8 + A and writes to F
func gbLDDAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDBFm  Reads from memory pointed by D << 8 + B and writes to F
func gbLDDBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDCFm  Reads from memory pointed by D << 8 + C and writes to F
func gbLDDCFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDEFm  Reads from memory pointed by D << 8 + E and writes to F
func gbLDDEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDHFm  Reads from memory pointed by D << 8 + H and writes to F
func gbLDDHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDLFm  Reads from memory pointed by D << 8 + L and writes to F
func gbLDDLFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDFFm  Reads from memory pointed by D << 8 + F and writes to F
func gbLDDFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.D) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEAFm  Reads from memory pointed by E << 8 + A and writes to F
func gbLDEAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEBFm  Reads from memory pointed by E << 8 + B and writes to F
func gbLDEBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDECFm  Reads from memory pointed by E << 8 + C and writes to F
func gbLDECFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEDFm  Reads from memory pointed by E << 8 + D and writes to F
func gbLDEDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEHFm  Reads from memory pointed by E << 8 + H and writes to F
func gbLDEHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDELFm  Reads from memory pointed by E << 8 + L and writes to F
func gbLDELFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEFFm  Reads from memory pointed by E << 8 + F and writes to F
func gbLDEFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.E) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHAFm  Reads from memory pointed by H << 8 + A and writes to F
func gbLDHAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHBFm  Reads from memory pointed by H << 8 + B and writes to F
func gbLDHBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHCFm  Reads from memory pointed by H << 8 + C and writes to F
func gbLDHCFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHDFm  Reads from memory pointed by H << 8 + D and writes to F
func gbLDHDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHEFm  Reads from memory pointed by H << 8 + E and writes to F
func gbLDHEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHLFm  Reads from memory pointed by H << 8 + L and writes to F
func gbLDHLFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHFFm  Reads from memory pointed by H << 8 + F and writes to F
func gbLDHFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.H) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLAFm  Reads from memory pointed by L << 8 + A and writes to F
func gbLDLAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLBFm  Reads from memory pointed by L << 8 + B and writes to F
func gbLDLBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLCFm  Reads from memory pointed by L << 8 + C and writes to F
func gbLDLCFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLDFm  Reads from memory pointed by L << 8 + D and writes to F
func gbLDLDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLEFm  Reads from memory pointed by L << 8 + E and writes to F
func gbLDLEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLHFm  Reads from memory pointed by L << 8 + H and writes to F
func gbLDLHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLFFm  Reads from memory pointed by L << 8 + F and writes to F
func gbLDLFFm(cpu *Core) {
	hl := (uint16(cpu.Registers.L) << 8) + uint16(cpu.Registers.F)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFAFm  Reads from memory pointed by F << 8 + A and writes to F
func gbLDFAFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.A)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFBFm  Reads from memory pointed by F << 8 + B and writes to F
func gbLDFBFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.B)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFCFm  Reads from memory pointed by F << 8 + C and writes to F
func gbLDFCFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.C)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFDFm  Reads from memory pointed by F << 8 + D and writes to F
func gbLDFDFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.D)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFEFm  Reads from memory pointed by F << 8 + E and writes to F
func gbLDFEFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.E)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFHFm  Reads from memory pointed by F << 8 + H and writes to F
func gbLDFHFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.H)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFLFm  Reads from memory pointed by F << 8 + L and writes to F
func gbLDFLFm(cpu *Core) {
	hl := (uint16(cpu.Registers.F) << 8) + uint16(cpu.Registers.L)
	cpu.Registers.F = cpu.Memory.ReadByte(hl)
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDAmm Writes register A to memory pointed by PC
func gbLDAmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.A = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDBmm Writes register B to memory pointed by PC
func gbLDBmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.B = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDCmm Writes register C to memory pointed by PC
func gbLDCmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.C = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDDmm Writes register D to memory pointed by PC
func gbLDDmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.D = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDEmm Writes register E to memory pointed by PC
func gbLDEmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.E = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDHmm Writes register H to memory pointed by PC
func gbLDHmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.H = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDLmm Writes register L to memory pointed by PC
func gbLDLmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.L = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDFmm Writes register F to memory pointed by PC
func gbLDFmm(cpu *Core) {
	addr := cpu.Memory.ReadWord(cpu.Registers.PC)
	cpu.Registers.F = cpu.Memory.ReadByte(addr)
	cpu.Registers.PC += 2
	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// gbLDABnn Reads from memory pointed by PC to B and PC+1 to A
func gbLDABnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDACnn Reads from memory pointed by PC to C and PC+1 to A
func gbLDACnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDADnn Reads from memory pointed by PC to D and PC+1 to A
func gbLDADnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDAEnn Reads from memory pointed by PC to E and PC+1 to A
func gbLDAEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDAHnn Reads from memory pointed by PC to H and PC+1 to A
func gbLDAHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDALnn Reads from memory pointed by PC to L and PC+1 to A
func gbLDALnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDAFnn Reads from memory pointed by PC to F and PC+1 to A
func gbLDAFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBAnn Reads from memory pointed by PC to A and PC+1 to B
func gbLDBAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBCnn Reads from memory pointed by PC to C and PC+1 to B
func gbLDBCnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBDnn Reads from memory pointed by PC to D and PC+1 to B
func gbLDBDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBEnn Reads from memory pointed by PC to E and PC+1 to B
func gbLDBEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBHnn Reads from memory pointed by PC to H and PC+1 to B
func gbLDBHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBLnn Reads from memory pointed by PC to L and PC+1 to B
func gbLDBLnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBFnn Reads from memory pointed by PC to F and PC+1 to B
func gbLDBFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCAnn Reads from memory pointed by PC to A and PC+1 to C
func gbLDCAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCBnn Reads from memory pointed by PC to B and PC+1 to C
func gbLDCBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCDnn Reads from memory pointed by PC to D and PC+1 to C
func gbLDCDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCEnn Reads from memory pointed by PC to E and PC+1 to C
func gbLDCEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCHnn Reads from memory pointed by PC to H and PC+1 to C
func gbLDCHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCLnn Reads from memory pointed by PC to L and PC+1 to C
func gbLDCLnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCFnn Reads from memory pointed by PC to F and PC+1 to C
func gbLDCFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDAnn Reads from memory pointed by PC to A and PC+1 to D
func gbLDDAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDBnn Reads from memory pointed by PC to B and PC+1 to D
func gbLDDBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDCnn Reads from memory pointed by PC to C and PC+1 to D
func gbLDDCnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDEnn Reads from memory pointed by PC to E and PC+1 to D
func gbLDDEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDHnn Reads from memory pointed by PC to H and PC+1 to D
func gbLDDHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDLnn Reads from memory pointed by PC to L and PC+1 to D
func gbLDDLnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDFnn Reads from memory pointed by PC to F and PC+1 to D
func gbLDDFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEAnn Reads from memory pointed by PC to A and PC+1 to E
func gbLDEAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEBnn Reads from memory pointed by PC to B and PC+1 to E
func gbLDEBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDECnn Reads from memory pointed by PC to C and PC+1 to E
func gbLDECnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEDnn Reads from memory pointed by PC to D and PC+1 to E
func gbLDEDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEHnn Reads from memory pointed by PC to H and PC+1 to E
func gbLDEHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDELnn Reads from memory pointed by PC to L and PC+1 to E
func gbLDELnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEFnn Reads from memory pointed by PC to F and PC+1 to E
func gbLDEFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHAnn Reads from memory pointed by PC to A and PC+1 to H
func gbLDHAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHBnn Reads from memory pointed by PC to B and PC+1 to H
func gbLDHBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHCnn Reads from memory pointed by PC to C and PC+1 to H
func gbLDHCnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHDnn Reads from memory pointed by PC to D and PC+1 to H
func gbLDHDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHEnn Reads from memory pointed by PC to E and PC+1 to H
func gbLDHEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHLnn Reads from memory pointed by PC to L and PC+1 to H
func gbLDHLnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHFnn Reads from memory pointed by PC to F and PC+1 to H
func gbLDHFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLAnn Reads from memory pointed by PC to A and PC+1 to L
func gbLDLAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLBnn Reads from memory pointed by PC to B and PC+1 to L
func gbLDLBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLCnn Reads from memory pointed by PC to C and PC+1 to L
func gbLDLCnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLDnn Reads from memory pointed by PC to D and PC+1 to L
func gbLDLDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLEnn Reads from memory pointed by PC to E and PC+1 to L
func gbLDLEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLHnn Reads from memory pointed by PC to H and PC+1 to L
func gbLDLHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLFnn Reads from memory pointed by PC to F and PC+1 to L
func gbLDLFnn(cpu *Core) {

	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFAnn Reads from memory pointed by PC to A and PC+1 to F
func gbLDFAnn(cpu *Core) {

	cpu.Registers.A = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFBnn Reads from memory pointed by PC to B and PC+1 to F
func gbLDFBnn(cpu *Core) {

	cpu.Registers.B = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFCnn Reads from memory pointed by PC to C and PC+1 to F
func gbLDFCnn(cpu *Core) {

	cpu.Registers.C = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFDnn Reads from memory pointed by PC to D and PC+1 to F
func gbLDFDnn(cpu *Core) {

	cpu.Registers.D = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFEnn Reads from memory pointed by PC to E and PC+1 to F
func gbLDFEnn(cpu *Core) {

	cpu.Registers.E = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFHnn Reads from memory pointed by PC to H and PC+1 to F
func gbLDFHnn(cpu *Core) {

	cpu.Registers.H = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFLnn Reads from memory pointed by PC to L and PC+1 to F
func gbLDFLnn(cpu *Core) {

	cpu.Registers.L = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++
	cpu.Registers.F = cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHLIA Sets A to Memory at H/L and increments HL.
func gbLDHLIA(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.A)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIB Sets B to Memory at H/L and increments HL.
func gbLDHLIB(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.B)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIC Sets C to Memory at H/L and increments HL.
func gbLDHLIC(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.C)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLID Sets D to Memory at H/L and increments HL.
func gbLDHLID(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.D)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIE Sets E to Memory at H/L and increments HL.
func gbLDHLIE(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.E)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIH Sets H to Memory at H/L and increments HL.
func gbLDHLIH(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.H)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIL Sets L to Memory at H/L and increments HL.
func gbLDHLIL(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.L)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDHLIF Sets F to Memory at H/L and increments HL.
func gbLDHLIF(cpu *Core) {
	cpu.Memory.WriteByte(cpu.Registers.HL(), cpu.Registers.F)
	cpu.Registers.L++
	if cpu.Registers.L == 0 {
		cpu.Registers.H++
	}
	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbLDAIOn
func gbLDAIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.A = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDBIOn
func gbLDBIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.B = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDCIOn
func gbLDCIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.C = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDDIOn
func gbLDDIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.D = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDEIOn
func gbLDEIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.E = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDHIOn
func gbLDHIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.H = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDLIOn
func gbLDLIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.L = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// gbLDFIOn
func gbLDFIOn(cpu *Core) {
	addr := cpu.Memory.ReadByte(cpu.Registers.PC)
	cpu.Registers.F = cpu.Memory.ReadByte(0xFF00 + uint16(addr))
	cpu.Registers.PC++

	cpu.Registers.LastClockM = 3
	cpu.Registers.LastClockT = 12
}

// endregion
// region Data Processing Instructions

// gbADDrA Adds A to A
func gbADDrA(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.A)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.A&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrB Adds B to A
func gbADDrB(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.B)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.B&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrC Adds C to A
func gbADDrC(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.C)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.C&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrD Adds D to A
func gbADDrD(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.D)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.D&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrE Adds E to A
func gbADDrE(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.E)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.E&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrH Adds H to A
func gbADDrH(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.H)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.H&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrL Adds L to A
func gbADDrL(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.L)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.L&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDrF Adds F to A
func gbADDrF(cpu *Core) {
	sum := uint16(cpu.Registers.A) + uint16(cpu.Registers.F)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(cpu.Registers.F&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 1
	cpu.Registers.LastClockT = 4
}

// gbADDHLAB Adds (A << 8) + B to HL
func gbADDHLAB(cpu *Core) {
	AB := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.B)
	sum := AB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAC Adds (A << 8) + C to HL
func gbADDHLAC(cpu *Core) {
	AC := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.C)
	sum := AC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAD Adds (A << 8) + D to HL
func gbADDHLAD(cpu *Core) {
	AD := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.D)
	sum := AD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAE Adds (A << 8) + E to HL
func gbADDHLAE(cpu *Core) {
	AE := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.E)
	sum := AE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAH Adds (A << 8) + H to HL
func gbADDHLAH(cpu *Core) {
	AH := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.H)
	sum := AH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAL Adds (A << 8) + L to HL
func gbADDHLAL(cpu *Core) {
	AL := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.L)
	sum := AL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLAF Adds (A << 8) + F to HL
func gbADDHLAF(cpu *Core) {
	AF := uint16(cpu.Registers.A)<<8 + uint16(cpu.Registers.F)
	sum := AF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((AF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBA Adds (B << 8) + A to HL
func gbADDHLBA(cpu *Core) {
	BA := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.A)
	sum := BA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBC Adds (B << 8) + C to HL
func gbADDHLBC(cpu *Core) {
	BC := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.C)
	sum := BC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBD Adds (B << 8) + D to HL
func gbADDHLBD(cpu *Core) {
	BD := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.D)
	sum := BD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBE Adds (B << 8) + E to HL
func gbADDHLBE(cpu *Core) {
	BE := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.E)
	sum := BE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBH Adds (B << 8) + H to HL
func gbADDHLBH(cpu *Core) {
	BH := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.H)
	sum := BH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBL Adds (B << 8) + L to HL
func gbADDHLBL(cpu *Core) {
	BL := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.L)
	sum := BL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLBF Adds (B << 8) + F to HL
func gbADDHLBF(cpu *Core) {
	BF := uint16(cpu.Registers.B)<<8 + uint16(cpu.Registers.F)
	sum := BF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((BF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCA Adds (C << 8) + A to HL
func gbADDHLCA(cpu *Core) {
	CA := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.A)
	sum := CA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCB Adds (C << 8) + B to HL
func gbADDHLCB(cpu *Core) {
	CB := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.B)
	sum := CB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCD Adds (C << 8) + D to HL
func gbADDHLCD(cpu *Core) {
	CD := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.D)
	sum := CD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCE Adds (C << 8) + E to HL
func gbADDHLCE(cpu *Core) {
	CE := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.E)
	sum := CE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCH Adds (C << 8) + H to HL
func gbADDHLCH(cpu *Core) {
	CH := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.H)
	sum := CH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCL Adds (C << 8) + L to HL
func gbADDHLCL(cpu *Core) {
	CL := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.L)
	sum := CL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLCF Adds (C << 8) + F to HL
func gbADDHLCF(cpu *Core) {
	CF := uint16(cpu.Registers.C)<<8 + uint16(cpu.Registers.F)
	sum := CF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((CF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDA Adds (D << 8) + A to HL
func gbADDHLDA(cpu *Core) {
	DA := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.A)
	sum := DA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDB Adds (D << 8) + B to HL
func gbADDHLDB(cpu *Core) {
	DB := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.B)
	sum := DB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDC Adds (D << 8) + C to HL
func gbADDHLDC(cpu *Core) {
	DC := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.C)
	sum := DC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDE Adds (D << 8) + E to HL
func gbADDHLDE(cpu *Core) {
	DE := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.E)
	sum := DE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDH Adds (D << 8) + H to HL
func gbADDHLDH(cpu *Core) {
	DH := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.H)
	sum := DH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDL Adds (D << 8) + L to HL
func gbADDHLDL(cpu *Core) {
	DL := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.L)
	sum := DL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLDF Adds (D << 8) + F to HL
func gbADDHLDF(cpu *Core) {
	DF := uint16(cpu.Registers.D)<<8 + uint16(cpu.Registers.F)
	sum := DF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((DF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEA Adds (E << 8) + A to HL
func gbADDHLEA(cpu *Core) {
	EA := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.A)
	sum := EA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEB Adds (E << 8) + B to HL
func gbADDHLEB(cpu *Core) {
	EB := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.B)
	sum := EB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEC Adds (E << 8) + C to HL
func gbADDHLEC(cpu *Core) {
	EC := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.C)
	sum := EC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLED Adds (E << 8) + D to HL
func gbADDHLED(cpu *Core) {
	ED := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.D)
	sum := ED + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((ED & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEH Adds (E << 8) + H to HL
func gbADDHLEH(cpu *Core) {
	EH := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.H)
	sum := EH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEL Adds (E << 8) + L to HL
func gbADDHLEL(cpu *Core) {
	EL := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.L)
	sum := EL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLEF Adds (E << 8) + F to HL
func gbADDHLEF(cpu *Core) {
	EF := uint16(cpu.Registers.E)<<8 + uint16(cpu.Registers.F)
	sum := EF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((EF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHA Adds (H << 8) + A to HL
func gbADDHLHA(cpu *Core) {
	HA := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.A)
	sum := HA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHB Adds (H << 8) + B to HL
func gbADDHLHB(cpu *Core) {
	HB := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.B)
	sum := HB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHC Adds (H << 8) + C to HL
func gbADDHLHC(cpu *Core) {
	HC := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.C)
	sum := HC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHD Adds (H << 8) + D to HL
func gbADDHLHD(cpu *Core) {
	HD := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.D)
	sum := HD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHE Adds (H << 8) + E to HL
func gbADDHLHE(cpu *Core) {
	HE := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.E)
	sum := HE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHL Adds (H << 8) + L to HL
func gbADDHLHL(cpu *Core) {
	HL := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.L)
	sum := HL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLHF Adds (H << 8) + F to HL
func gbADDHLHF(cpu *Core) {
	HF := uint16(cpu.Registers.H)<<8 + uint16(cpu.Registers.F)
	sum := HF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((HF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLA Adds (L << 8) + A to HL
func gbADDHLLA(cpu *Core) {
	LA := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.A)
	sum := LA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLB Adds (L << 8) + B to HL
func gbADDHLLB(cpu *Core) {
	LB := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.B)
	sum := LB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLC Adds (L << 8) + C to HL
func gbADDHLLC(cpu *Core) {
	LC := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.C)
	sum := LC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLD Adds (L << 8) + D to HL
func gbADDHLLD(cpu *Core) {
	LD := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.D)
	sum := LD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLE Adds (L << 8) + E to HL
func gbADDHLLE(cpu *Core) {
	LE := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.E)
	sum := LE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLH Adds (L << 8) + H to HL
func gbADDHLLH(cpu *Core) {
	LH := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.H)
	sum := LH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLLF Adds (L << 8) + F to HL
func gbADDHLLF(cpu *Core) {
	LF := uint16(cpu.Registers.L)<<8 + uint16(cpu.Registers.F)
	sum := LF + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((LF & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFA Adds (F << 8) + A to HL
func gbADDHLFA(cpu *Core) {
	FA := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.A)
	sum := FA + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FA & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFB Adds (F << 8) + B to HL
func gbADDHLFB(cpu *Core) {
	FB := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.B)
	sum := FB + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FB & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFC Adds (F << 8) + C to HL
func gbADDHLFC(cpu *Core) {
	FC := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.C)
	sum := FC + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FC & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFD Adds (F << 8) + D to HL
func gbADDHLFD(cpu *Core) {
	FD := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.D)
	sum := FD + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FD & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFE Adds (F << 8) + E to HL
func gbADDHLFE(cpu *Core) {
	FE := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.E)
	sum := FE + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FE & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFH Adds (F << 8) + H to HL
func gbADDHLFH(cpu *Core) {
	FH := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.H)
	sum := FH + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FH & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLFL Adds (F << 8) + L to HL
func gbADDHLFL(cpu *Core) {
	FL := uint16(cpu.Registers.F)<<8 + uint16(cpu.Registers.L)
	sum := FL + cpu.Registers.HL()

	cpu.Registers.SetCarry(sum > 65535)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((FL & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHL Adds byte from memory pointed by HL to A
func gbADDHL(cpu *Core) {
	z := cpu.Memory.ReadByte(cpu.Registers.HL())
	sum := uint16(cpu.Registers.A) + uint16(z)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(z&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDn Adds byte from memory pointed by PC to A
func gbADDn(cpu *Core) {
	z := cpu.Memory.ReadByte(cpu.Registers.PC)
	sum := uint16(cpu.Registers.A) + uint16(z)

	cpu.Registers.SetCarry(sum > 255)
	cpu.Registers.SetZero(sum&0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry((cpu.Registers.A&0xF)+(z&0xF) > 0xF)

	cpu.Registers.A = uint8(sum)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDHLSP Adds SP to HL
func gbADDHLSP(cpu *Core) {
	sum := cpu.Registers.HL() + cpu.Registers.SP
	cpu.Registers.SetCarry(sum > 65535)
	//cpu.Registers.SetZero(sum & 0xFF == 0)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetHalfCarry(((cpu.Registers.SP & 0xFFF) + (cpu.Registers.HL() & 0xFFF)) > 0xFFF)

	cpu.Registers.H = uint8(sum >> 8)
	cpu.Registers.L = uint8(sum & 0xFF)

	cpu.Registers.LastClockM = 2
	cpu.Registers.LastClockT = 8
}

// gbADDSPn Reads a signed byte from memory pointed by PC and adds to SP
func gbADDSPn(cpu *Core) {
	a := int(cpu.Memory.ReadByte(cpu.Registers.PC))
	cpu.Registers.PC++
	a = (a << 24) >> 24 // Convert unsigned byte to signed

	cpu.Registers.SetZero(false)
	cpu.Registers.SetSub(false)
	cpu.Registers.SetCarry(int(cpu.Registers.SP&0xFF)+(a&0xFF) > 0xFF)
	cpu.Registers.SetHalfCarry(int(cpu.Registers.SP&0xF)+(a&0xF) > 0xF)

	cpu.Registers.SP = uint16(int(cpu.Registers.SP) + a)

	cpu.Registers.LastClockM = 4
	cpu.Registers.LastClockT = 16
}

// endregion

var GBInstructions = []GBInstruction{}
