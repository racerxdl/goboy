        // region 0x{{.OpCodeX}} Test {{.Instruction}}
        
        func TestDECr{{.Arg0}}(t *testing.T) {
            cpu := MakeCore()
            
            // Console.WriteLine("Testing (0x{{.OpCodeX}}) \"{{.Instruction}}\"")
            for i := 0; i < RunCycles; i++ {
                cpu.Reset()
                cpu.Registers.Randomize()
                cpu.Memory.Randomize()

                RegBefore := cpu.Registers.Clone()
                GBInstructions[0x{{.OpCodeX}}](cpu)
                RegAfter := cpu.Registers.Clone()

                var val = RegBefore.{{.Arg0}} - 1
                var halfCarry = (RegBefore.{{.Arg0}} & 0xF) == 0x00

                
                if (val) != (RegAfter.{{.Arg0}}) {
                    t.Errorf("Expected val to be %v but got %v", val, RegAfter.{{.Arg0}})
                }                
                if (val == 0) != (RegAfter.GetZero()) {
                    t.Errorf("Expected val == 0 to be %v but got %v", val == 0, RegAfter.GetZero())
                }                
                if (halfCarry) != (RegAfter.GetHalfCarry()) {
                    t.Errorf("Expected halfCarry to be %v but got %v", halfCarry, RegAfter.GetHalfCarry())
                }
                {{.Asserts}}
                {{.Flags}}
            }
        }
        // endregion